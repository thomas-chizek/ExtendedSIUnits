//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;
using System.Linq;
using UnitsNet.Units;
using Xunit;

// Disable build warning CS1718: Comparison made to same variable; did you mean to compare something else?
#pragma warning disable 1718

// ReSharper disable once CheckNamespace
namespace UnitsNet.Tests
{
    /// <summary>
    /// Test of SpecificEntropy.
    /// </summary>
// ReSharper disable once PartialTypeWithSinglePart
    public abstract partial class SpecificEntropyTestsBase
    {
        protected abstract double AttocaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double AttojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double AttojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double BtusPerPoundFahrenheitInOneJoulePerKilogramKelvin { get; }
        protected abstract double CaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double CenticaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double CentijoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double CentijoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double DecacaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double DecajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double DecajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double DecicaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double DecijoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double DecijoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double ExacaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double ExajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double ExajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double FemtocaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double FemtojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double FemtojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double GigacaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double GigajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double GigajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double HectocaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double HectojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double HectojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double JoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double JoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double KilocaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double KilojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double KilojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double MegacaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double MegajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double MegajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double MicrocaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double MicrojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double MicrojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double MillicaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double MillijoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double MillijoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double NanocaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double NanojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double NanojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double PetacaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double PetajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double PetajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double PicocaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double PicojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double PicojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double QutracaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double QutrajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double QutrajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double TeracaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double TerajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double TerajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double VettacaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double VettajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double VettajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double YoctocaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double YoctojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double YoctojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double YottacaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double YottajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double YottajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double ZeptocaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double ZeptojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double ZeptojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double ZettacaloriesPerGramKelvinInOneJoulePerKilogramKelvin { get; }
        protected abstract double ZettajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin { get; }
        protected abstract double ZettajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin { get; }

// ReSharper disable VirtualMemberNeverOverriden.Global
        protected virtual double AttocaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double AttojoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double AttojoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double BtusPerPoundFahrenheitTolerance { get { return 1e-5; } }
        protected virtual double CaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double CenticaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double CentijoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double CentijoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double DecacaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double DecajoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double DecajoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double DecicaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double DecijoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double DecijoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double ExacaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double ExajoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double ExajoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double FemtocaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double FemtojoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double FemtojoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double GigacaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double GigajoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double GigajoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double HectocaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double HectojoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double HectojoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double JoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double JoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double KilocaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double KilojoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double KilojoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double MegacaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double MegajoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double MegajoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double MicrocaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double MicrojoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double MicrojoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double MillicaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double MillijoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double MillijoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double NanocaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double NanojoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double NanojoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double PetacaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double PetajoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double PetajoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double PicocaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double PicojoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double PicojoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double QutracaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double QutrajoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double QutrajoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double TeracaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double TerajoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double TerajoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double VettacaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double VettajoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double VettajoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double YoctocaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double YoctojoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double YoctojoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double YottacaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double YottajoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double YottajoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double ZeptocaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double ZeptojoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double ZeptojoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
        protected virtual double ZettacaloriesPerGramKelvinTolerance { get { return 1e-5; } }
        protected virtual double ZettajoulesPerKilogramDegreeCelsiusTolerance { get { return 1e-5; } }
        protected virtual double ZettajoulesPerKilogramKelvinTolerance { get { return 1e-5; } }
// ReSharper restore VirtualMemberNeverOverriden.Global

        [Fact]
        public void Ctor_WithUndefinedUnit_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => new SpecificEntropy((double)0.0, SpecificEntropyUnit.Undefined));
        }

        [Fact]
        public void Ctor_WithInfinityValue_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => new SpecificEntropy(double.PositiveInfinity, SpecificEntropyUnit.JoulePerKilogramKelvin));
            Assert.Throws<ArgumentException>(() => new SpecificEntropy(double.NegativeInfinity, SpecificEntropyUnit.JoulePerKilogramKelvin));
        }

        [Fact]
        public void Ctor_WithNaNValue_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => new SpecificEntropy(double.NaN, SpecificEntropyUnit.JoulePerKilogramKelvin));
        }

        [Fact]
        public void JoulePerKilogramKelvinToSpecificEntropyUnits()
        {
            SpecificEntropy jouleperkilogramkelvin = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            AssertEx.EqualTolerance(AttocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.AttocaloriesPerGramKelvin, AttocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(AttojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.AttojoulesPerKilogramDegreeCelsius, AttojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(AttojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.AttojoulesPerKilogramKelvin, AttojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(BtusPerPoundFahrenheitInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.BtusPerPoundFahrenheit, BtusPerPoundFahrenheitTolerance);
            AssertEx.EqualTolerance(CaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.CaloriesPerGramKelvin, CaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(CenticaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.CenticaloriesPerGramKelvin, CenticaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(CentijoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.CentijoulesPerKilogramDegreeCelsius, CentijoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(CentijoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.CentijoulesPerKilogramKelvin, CentijoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(DecacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.DecacaloriesPerGramKelvin, DecacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(DecajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.DecajoulesPerKilogramDegreeCelsius, DecajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(DecajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.DecajoulesPerKilogramKelvin, DecajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(DecicaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.DecicaloriesPerGramKelvin, DecicaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(DecijoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.DecijoulesPerKilogramDegreeCelsius, DecijoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(DecijoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.DecijoulesPerKilogramKelvin, DecijoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(ExacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.ExacaloriesPerGramKelvin, ExacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(ExajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.ExajoulesPerKilogramDegreeCelsius, ExajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(ExajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.ExajoulesPerKilogramKelvin, ExajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(FemtocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.FemtocaloriesPerGramKelvin, FemtocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(FemtojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.FemtojoulesPerKilogramDegreeCelsius, FemtojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(FemtojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.FemtojoulesPerKilogramKelvin, FemtojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(GigacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.GigacaloriesPerGramKelvin, GigacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(GigajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.GigajoulesPerKilogramDegreeCelsius, GigajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(GigajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.GigajoulesPerKilogramKelvin, GigajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(HectocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.HectocaloriesPerGramKelvin, HectocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(HectojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.HectojoulesPerKilogramDegreeCelsius, HectojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(HectojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.HectojoulesPerKilogramKelvin, HectojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(JoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.JoulesPerKilogramDegreeCelsius, JoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(JoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.JoulesPerKilogramKelvin, JoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(KilocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.KilocaloriesPerGramKelvin, KilocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(KilojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.KilojoulesPerKilogramDegreeCelsius, KilojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(KilojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.KilojoulesPerKilogramKelvin, KilojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(MegacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.MegacaloriesPerGramKelvin, MegacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(MegajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.MegajoulesPerKilogramDegreeCelsius, MegajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(MegajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.MegajoulesPerKilogramKelvin, MegajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(MicrocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.MicrocaloriesPerGramKelvin, MicrocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(MicrojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.MicrojoulesPerKilogramDegreeCelsius, MicrojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(MicrojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.MicrojoulesPerKilogramKelvin, MicrojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(MillicaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.MillicaloriesPerGramKelvin, MillicaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(MillijoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.MillijoulesPerKilogramDegreeCelsius, MillijoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(MillijoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.MillijoulesPerKilogramKelvin, MillijoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(NanocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.NanocaloriesPerGramKelvin, NanocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(NanojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.NanojoulesPerKilogramDegreeCelsius, NanojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(NanojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.NanojoulesPerKilogramKelvin, NanojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(PetacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.PetacaloriesPerGramKelvin, PetacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(PetajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.PetajoulesPerKilogramDegreeCelsius, PetajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(PetajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.PetajoulesPerKilogramKelvin, PetajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(PicocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.PicocaloriesPerGramKelvin, PicocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(PicojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.PicojoulesPerKilogramDegreeCelsius, PicojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(PicojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.PicojoulesPerKilogramKelvin, PicojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(QutracaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.QutracaloriesPerGramKelvin, QutracaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(QutrajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.QutrajoulesPerKilogramDegreeCelsius, QutrajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(QutrajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.QutrajoulesPerKilogramKelvin, QutrajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(TeracaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.TeracaloriesPerGramKelvin, TeracaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(TerajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.TerajoulesPerKilogramDegreeCelsius, TerajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(TerajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.TerajoulesPerKilogramKelvin, TerajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(VettacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.VettacaloriesPerGramKelvin, VettacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(VettajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.VettajoulesPerKilogramDegreeCelsius, VettajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(VettajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.VettajoulesPerKilogramKelvin, VettajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(YoctocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.YoctocaloriesPerGramKelvin, YoctocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(YoctojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.YoctojoulesPerKilogramDegreeCelsius, YoctojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(YoctojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.YoctojoulesPerKilogramKelvin, YoctojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(YottacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.YottacaloriesPerGramKelvin, YottacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(YottajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.YottajoulesPerKilogramDegreeCelsius, YottajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(YottajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.YottajoulesPerKilogramKelvin, YottajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(ZeptocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.ZeptocaloriesPerGramKelvin, ZeptocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(ZeptojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.ZeptojoulesPerKilogramDegreeCelsius, ZeptojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(ZeptojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.ZeptojoulesPerKilogramKelvin, ZeptojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(ZettacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.ZettacaloriesPerGramKelvin, ZettacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(ZettajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.ZettajoulesPerKilogramDegreeCelsius, ZettajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(ZettajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.ZettajoulesPerKilogramKelvin, ZettajoulesPerKilogramKelvinTolerance);
        }

        [Fact]
        public void FromValueAndUnit()
        {
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.AttocaloriePerGramKelvin).AttocaloriesPerGramKelvin, AttocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.AttojoulePerKilogramDegreeCelsius).AttojoulesPerKilogramDegreeCelsius, AttojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.AttojoulePerKilogramKelvin).AttojoulesPerKilogramKelvin, AttojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.BtuPerPoundFahrenheit).BtusPerPoundFahrenheit, BtusPerPoundFahrenheitTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.CaloriePerGramKelvin).CaloriesPerGramKelvin, CaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.CenticaloriePerGramKelvin).CenticaloriesPerGramKelvin, CenticaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.CentijoulePerKilogramDegreeCelsius).CentijoulesPerKilogramDegreeCelsius, CentijoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.CentijoulePerKilogramKelvin).CentijoulesPerKilogramKelvin, CentijoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.DecacaloriePerGramKelvin).DecacaloriesPerGramKelvin, DecacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.DecajoulePerKilogramDegreeCelsius).DecajoulesPerKilogramDegreeCelsius, DecajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.DecajoulePerKilogramKelvin).DecajoulesPerKilogramKelvin, DecajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.DecicaloriePerGramKelvin).DecicaloriesPerGramKelvin, DecicaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.DecijoulePerKilogramDegreeCelsius).DecijoulesPerKilogramDegreeCelsius, DecijoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.DecijoulePerKilogramKelvin).DecijoulesPerKilogramKelvin, DecijoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.ExacaloriePerGramKelvin).ExacaloriesPerGramKelvin, ExacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.ExajoulePerKilogramDegreeCelsius).ExajoulesPerKilogramDegreeCelsius, ExajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.ExajoulePerKilogramKelvin).ExajoulesPerKilogramKelvin, ExajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.FemtocaloriePerGramKelvin).FemtocaloriesPerGramKelvin, FemtocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.FemtojoulePerKilogramDegreeCelsius).FemtojoulesPerKilogramDegreeCelsius, FemtojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.FemtojoulePerKilogramKelvin).FemtojoulesPerKilogramKelvin, FemtojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.GigacaloriePerGramKelvin).GigacaloriesPerGramKelvin, GigacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.GigajoulePerKilogramDegreeCelsius).GigajoulesPerKilogramDegreeCelsius, GigajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.GigajoulePerKilogramKelvin).GigajoulesPerKilogramKelvin, GigajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.HectocaloriePerGramKelvin).HectocaloriesPerGramKelvin, HectocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.HectojoulePerKilogramDegreeCelsius).HectojoulesPerKilogramDegreeCelsius, HectojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.HectojoulePerKilogramKelvin).HectojoulesPerKilogramKelvin, HectojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.JoulePerKilogramDegreeCelsius).JoulesPerKilogramDegreeCelsius, JoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.JoulePerKilogramKelvin).JoulesPerKilogramKelvin, JoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.KilocaloriePerGramKelvin).KilocaloriesPerGramKelvin, KilocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius).KilojoulesPerKilogramDegreeCelsius, KilojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.KilojoulePerKilogramKelvin).KilojoulesPerKilogramKelvin, KilojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.MegacaloriePerGramKelvin).MegacaloriesPerGramKelvin, MegacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius).MegajoulesPerKilogramDegreeCelsius, MegajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.MegajoulePerKilogramKelvin).MegajoulesPerKilogramKelvin, MegajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.MicrocaloriePerGramKelvin).MicrocaloriesPerGramKelvin, MicrocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.MicrojoulePerKilogramDegreeCelsius).MicrojoulesPerKilogramDegreeCelsius, MicrojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.MicrojoulePerKilogramKelvin).MicrojoulesPerKilogramKelvin, MicrojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.MillicaloriePerGramKelvin).MillicaloriesPerGramKelvin, MillicaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.MillijoulePerKilogramDegreeCelsius).MillijoulesPerKilogramDegreeCelsius, MillijoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.MillijoulePerKilogramKelvin).MillijoulesPerKilogramKelvin, MillijoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.NanocaloriePerGramKelvin).NanocaloriesPerGramKelvin, NanocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.NanojoulePerKilogramDegreeCelsius).NanojoulesPerKilogramDegreeCelsius, NanojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.NanojoulePerKilogramKelvin).NanojoulesPerKilogramKelvin, NanojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.PetacaloriePerGramKelvin).PetacaloriesPerGramKelvin, PetacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.PetajoulePerKilogramDegreeCelsius).PetajoulesPerKilogramDegreeCelsius, PetajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.PetajoulePerKilogramKelvin).PetajoulesPerKilogramKelvin, PetajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.PicocaloriePerGramKelvin).PicocaloriesPerGramKelvin, PicocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.PicojoulePerKilogramDegreeCelsius).PicojoulesPerKilogramDegreeCelsius, PicojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.PicojoulePerKilogramKelvin).PicojoulesPerKilogramKelvin, PicojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.QutracaloriePerGramKelvin).QutracaloriesPerGramKelvin, QutracaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.QutrajoulePerKilogramDegreeCelsius).QutrajoulesPerKilogramDegreeCelsius, QutrajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.QutrajoulePerKilogramKelvin).QutrajoulesPerKilogramKelvin, QutrajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.TeracaloriePerGramKelvin).TeracaloriesPerGramKelvin, TeracaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.TerajoulePerKilogramDegreeCelsius).TerajoulesPerKilogramDegreeCelsius, TerajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.TerajoulePerKilogramKelvin).TerajoulesPerKilogramKelvin, TerajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.VettacaloriePerGramKelvin).VettacaloriesPerGramKelvin, VettacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.VettajoulePerKilogramDegreeCelsius).VettajoulesPerKilogramDegreeCelsius, VettajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.VettajoulePerKilogramKelvin).VettajoulesPerKilogramKelvin, VettajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.YoctocaloriePerGramKelvin).YoctocaloriesPerGramKelvin, YoctocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.YoctojoulePerKilogramDegreeCelsius).YoctojoulesPerKilogramDegreeCelsius, YoctojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.YoctojoulePerKilogramKelvin).YoctojoulesPerKilogramKelvin, YoctojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.YottacaloriePerGramKelvin).YottacaloriesPerGramKelvin, YottacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.YottajoulePerKilogramDegreeCelsius).YottajoulesPerKilogramDegreeCelsius, YottajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.YottajoulePerKilogramKelvin).YottajoulesPerKilogramKelvin, YottajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.ZeptocaloriePerGramKelvin).ZeptocaloriesPerGramKelvin, ZeptocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.ZeptojoulePerKilogramDegreeCelsius).ZeptojoulesPerKilogramDegreeCelsius, ZeptojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.ZeptojoulePerKilogramKelvin).ZeptojoulesPerKilogramKelvin, ZeptojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.ZettacaloriePerGramKelvin).ZettacaloriesPerGramKelvin, ZettacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.ZettajoulePerKilogramDegreeCelsius).ZettajoulesPerKilogramDegreeCelsius, ZettajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.From(1, SpecificEntropyUnit.ZettajoulePerKilogramKelvin).ZettajoulesPerKilogramKelvin, ZettajoulesPerKilogramKelvinTolerance);
        }

        [Fact]
        public void FromJoulesPerKilogramKelvin_WithInfinityValue_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => SpecificEntropy.FromJoulesPerKilogramKelvin(double.PositiveInfinity));
            Assert.Throws<ArgumentException>(() => SpecificEntropy.FromJoulesPerKilogramKelvin(double.NegativeInfinity));
        }

        [Fact]
        public void FromJoulesPerKilogramKelvin_WithNanValue_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => SpecificEntropy.FromJoulesPerKilogramKelvin(double.NaN));
        }

        [Fact]
        public void As()
        {
            var jouleperkilogramkelvin = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            AssertEx.EqualTolerance(AttocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.AttocaloriePerGramKelvin), AttocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(AttojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.AttojoulePerKilogramDegreeCelsius), AttojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(AttojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.AttojoulePerKilogramKelvin), AttojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(BtusPerPoundFahrenheitInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.BtuPerPoundFahrenheit), BtusPerPoundFahrenheitTolerance);
            AssertEx.EqualTolerance(CaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.CaloriePerGramKelvin), CaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(CenticaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.CenticaloriePerGramKelvin), CenticaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(CentijoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.CentijoulePerKilogramDegreeCelsius), CentijoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(CentijoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.CentijoulePerKilogramKelvin), CentijoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(DecacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.DecacaloriePerGramKelvin), DecacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(DecajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.DecajoulePerKilogramDegreeCelsius), DecajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(DecajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.DecajoulePerKilogramKelvin), DecajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(DecicaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.DecicaloriePerGramKelvin), DecicaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(DecijoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.DecijoulePerKilogramDegreeCelsius), DecijoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(DecijoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.DecijoulePerKilogramKelvin), DecijoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(ExacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.ExacaloriePerGramKelvin), ExacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(ExajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.ExajoulePerKilogramDegreeCelsius), ExajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(ExajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.ExajoulePerKilogramKelvin), ExajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(FemtocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.FemtocaloriePerGramKelvin), FemtocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(FemtojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.FemtojoulePerKilogramDegreeCelsius), FemtojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(FemtojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.FemtojoulePerKilogramKelvin), FemtojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(GigacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.GigacaloriePerGramKelvin), GigacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(GigajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.GigajoulePerKilogramDegreeCelsius), GigajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(GigajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.GigajoulePerKilogramKelvin), GigajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(HectocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.HectocaloriePerGramKelvin), HectocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(HectojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.HectojoulePerKilogramDegreeCelsius), HectojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(HectojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.HectojoulePerKilogramKelvin), HectojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(JoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.JoulePerKilogramDegreeCelsius), JoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(JoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.JoulePerKilogramKelvin), JoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(KilocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.KilocaloriePerGramKelvin), KilocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(KilojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius), KilojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(KilojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.KilojoulePerKilogramKelvin), KilojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(MegacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.MegacaloriePerGramKelvin), MegacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(MegajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius), MegajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(MegajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.MegajoulePerKilogramKelvin), MegajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(MicrocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.MicrocaloriePerGramKelvin), MicrocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(MicrojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.MicrojoulePerKilogramDegreeCelsius), MicrojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(MicrojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.MicrojoulePerKilogramKelvin), MicrojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(MillicaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.MillicaloriePerGramKelvin), MillicaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(MillijoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.MillijoulePerKilogramDegreeCelsius), MillijoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(MillijoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.MillijoulePerKilogramKelvin), MillijoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(NanocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.NanocaloriePerGramKelvin), NanocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(NanojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.NanojoulePerKilogramDegreeCelsius), NanojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(NanojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.NanojoulePerKilogramKelvin), NanojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(PetacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.PetacaloriePerGramKelvin), PetacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(PetajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.PetajoulePerKilogramDegreeCelsius), PetajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(PetajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.PetajoulePerKilogramKelvin), PetajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(PicocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.PicocaloriePerGramKelvin), PicocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(PicojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.PicojoulePerKilogramDegreeCelsius), PicojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(PicojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.PicojoulePerKilogramKelvin), PicojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(QutracaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.QutracaloriePerGramKelvin), QutracaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(QutrajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.QutrajoulePerKilogramDegreeCelsius), QutrajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(QutrajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.QutrajoulePerKilogramKelvin), QutrajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(TeracaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.TeracaloriePerGramKelvin), TeracaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(TerajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.TerajoulePerKilogramDegreeCelsius), TerajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(TerajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.TerajoulePerKilogramKelvin), TerajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(VettacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.VettacaloriePerGramKelvin), VettacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(VettajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.VettajoulePerKilogramDegreeCelsius), VettajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(VettajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.VettajoulePerKilogramKelvin), VettajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(YoctocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.YoctocaloriePerGramKelvin), YoctocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(YoctojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.YoctojoulePerKilogramDegreeCelsius), YoctojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(YoctojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.YoctojoulePerKilogramKelvin), YoctojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(YottacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.YottacaloriePerGramKelvin), YottacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(YottajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.YottajoulePerKilogramDegreeCelsius), YottajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(YottajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.YottajoulePerKilogramKelvin), YottajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(ZeptocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.ZeptocaloriePerGramKelvin), ZeptocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(ZeptojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.ZeptojoulePerKilogramDegreeCelsius), ZeptojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(ZeptojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.ZeptojoulePerKilogramKelvin), ZeptojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(ZettacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.ZettacaloriePerGramKelvin), ZettacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(ZettajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.ZettajoulePerKilogramDegreeCelsius), ZettajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(ZettajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, jouleperkilogramkelvin.As(SpecificEntropyUnit.ZettajoulePerKilogramKelvin), ZettajoulesPerKilogramKelvinTolerance);
        }

        [Fact]
        public void ToUnit()
        {
            var jouleperkilogramkelvin = SpecificEntropy.FromJoulesPerKilogramKelvin(1);

            var attocaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.AttocaloriePerGramKelvin);
            AssertEx.EqualTolerance(AttocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)attocaloriepergramkelvinQuantity.Value, AttocaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.AttocaloriePerGramKelvin, attocaloriepergramkelvinQuantity.Unit);

            var attojouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.AttojoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(AttojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)attojouleperkilogramdegreecelsiusQuantity.Value, AttojoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.AttojoulePerKilogramDegreeCelsius, attojouleperkilogramdegreecelsiusQuantity.Unit);

            var attojouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.AttojoulePerKilogramKelvin);
            AssertEx.EqualTolerance(AttojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)attojouleperkilogramkelvinQuantity.Value, AttojoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.AttojoulePerKilogramKelvin, attojouleperkilogramkelvinQuantity.Unit);

            var btuperpoundfahrenheitQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.BtuPerPoundFahrenheit);
            AssertEx.EqualTolerance(BtusPerPoundFahrenheitInOneJoulePerKilogramKelvin, (double)btuperpoundfahrenheitQuantity.Value, BtusPerPoundFahrenheitTolerance);
            Assert.Equal(SpecificEntropyUnit.BtuPerPoundFahrenheit, btuperpoundfahrenheitQuantity.Unit);

            var caloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.CaloriePerGramKelvin);
            AssertEx.EqualTolerance(CaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)caloriepergramkelvinQuantity.Value, CaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.CaloriePerGramKelvin, caloriepergramkelvinQuantity.Unit);

            var centicaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.CenticaloriePerGramKelvin);
            AssertEx.EqualTolerance(CenticaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)centicaloriepergramkelvinQuantity.Value, CenticaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.CenticaloriePerGramKelvin, centicaloriepergramkelvinQuantity.Unit);

            var centijouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.CentijoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(CentijoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)centijouleperkilogramdegreecelsiusQuantity.Value, CentijoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.CentijoulePerKilogramDegreeCelsius, centijouleperkilogramdegreecelsiusQuantity.Unit);

            var centijouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.CentijoulePerKilogramKelvin);
            AssertEx.EqualTolerance(CentijoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)centijouleperkilogramkelvinQuantity.Value, CentijoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.CentijoulePerKilogramKelvin, centijouleperkilogramkelvinQuantity.Unit);

            var decacaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.DecacaloriePerGramKelvin);
            AssertEx.EqualTolerance(DecacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)decacaloriepergramkelvinQuantity.Value, DecacaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.DecacaloriePerGramKelvin, decacaloriepergramkelvinQuantity.Unit);

            var decajouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.DecajoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(DecajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)decajouleperkilogramdegreecelsiusQuantity.Value, DecajoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.DecajoulePerKilogramDegreeCelsius, decajouleperkilogramdegreecelsiusQuantity.Unit);

            var decajouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.DecajoulePerKilogramKelvin);
            AssertEx.EqualTolerance(DecajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)decajouleperkilogramkelvinQuantity.Value, DecajoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.DecajoulePerKilogramKelvin, decajouleperkilogramkelvinQuantity.Unit);

            var decicaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.DecicaloriePerGramKelvin);
            AssertEx.EqualTolerance(DecicaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)decicaloriepergramkelvinQuantity.Value, DecicaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.DecicaloriePerGramKelvin, decicaloriepergramkelvinQuantity.Unit);

            var decijouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.DecijoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(DecijoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)decijouleperkilogramdegreecelsiusQuantity.Value, DecijoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.DecijoulePerKilogramDegreeCelsius, decijouleperkilogramdegreecelsiusQuantity.Unit);

            var decijouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.DecijoulePerKilogramKelvin);
            AssertEx.EqualTolerance(DecijoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)decijouleperkilogramkelvinQuantity.Value, DecijoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.DecijoulePerKilogramKelvin, decijouleperkilogramkelvinQuantity.Unit);

            var exacaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.ExacaloriePerGramKelvin);
            AssertEx.EqualTolerance(ExacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)exacaloriepergramkelvinQuantity.Value, ExacaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.ExacaloriePerGramKelvin, exacaloriepergramkelvinQuantity.Unit);

            var exajouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.ExajoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(ExajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)exajouleperkilogramdegreecelsiusQuantity.Value, ExajoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.ExajoulePerKilogramDegreeCelsius, exajouleperkilogramdegreecelsiusQuantity.Unit);

            var exajouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.ExajoulePerKilogramKelvin);
            AssertEx.EqualTolerance(ExajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)exajouleperkilogramkelvinQuantity.Value, ExajoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.ExajoulePerKilogramKelvin, exajouleperkilogramkelvinQuantity.Unit);

            var femtocaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.FemtocaloriePerGramKelvin);
            AssertEx.EqualTolerance(FemtocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)femtocaloriepergramkelvinQuantity.Value, FemtocaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.FemtocaloriePerGramKelvin, femtocaloriepergramkelvinQuantity.Unit);

            var femtojouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.FemtojoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(FemtojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)femtojouleperkilogramdegreecelsiusQuantity.Value, FemtojoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.FemtojoulePerKilogramDegreeCelsius, femtojouleperkilogramdegreecelsiusQuantity.Unit);

            var femtojouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.FemtojoulePerKilogramKelvin);
            AssertEx.EqualTolerance(FemtojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)femtojouleperkilogramkelvinQuantity.Value, FemtojoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.FemtojoulePerKilogramKelvin, femtojouleperkilogramkelvinQuantity.Unit);

            var gigacaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.GigacaloriePerGramKelvin);
            AssertEx.EqualTolerance(GigacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)gigacaloriepergramkelvinQuantity.Value, GigacaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.GigacaloriePerGramKelvin, gigacaloriepergramkelvinQuantity.Unit);

            var gigajouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.GigajoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(GigajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)gigajouleperkilogramdegreecelsiusQuantity.Value, GigajoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.GigajoulePerKilogramDegreeCelsius, gigajouleperkilogramdegreecelsiusQuantity.Unit);

            var gigajouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.GigajoulePerKilogramKelvin);
            AssertEx.EqualTolerance(GigajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)gigajouleperkilogramkelvinQuantity.Value, GigajoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.GigajoulePerKilogramKelvin, gigajouleperkilogramkelvinQuantity.Unit);

            var hectocaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.HectocaloriePerGramKelvin);
            AssertEx.EqualTolerance(HectocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)hectocaloriepergramkelvinQuantity.Value, HectocaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.HectocaloriePerGramKelvin, hectocaloriepergramkelvinQuantity.Unit);

            var hectojouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.HectojoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(HectojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)hectojouleperkilogramdegreecelsiusQuantity.Value, HectojoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.HectojoulePerKilogramDegreeCelsius, hectojouleperkilogramdegreecelsiusQuantity.Unit);

            var hectojouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.HectojoulePerKilogramKelvin);
            AssertEx.EqualTolerance(HectojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)hectojouleperkilogramkelvinQuantity.Value, HectojoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.HectojoulePerKilogramKelvin, hectojouleperkilogramkelvinQuantity.Unit);

            var jouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.JoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(JoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)jouleperkilogramdegreecelsiusQuantity.Value, JoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.JoulePerKilogramDegreeCelsius, jouleperkilogramdegreecelsiusQuantity.Unit);

            var jouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.JoulePerKilogramKelvin);
            AssertEx.EqualTolerance(JoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)jouleperkilogramkelvinQuantity.Value, JoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.JoulePerKilogramKelvin, jouleperkilogramkelvinQuantity.Unit);

            var kilocaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.KilocaloriePerGramKelvin);
            AssertEx.EqualTolerance(KilocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)kilocaloriepergramkelvinQuantity.Value, KilocaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.KilocaloriePerGramKelvin, kilocaloriepergramkelvinQuantity.Unit);

            var kilojouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(KilojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)kilojouleperkilogramdegreecelsiusQuantity.Value, KilojoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.KilojoulePerKilogramDegreeCelsius, kilojouleperkilogramdegreecelsiusQuantity.Unit);

            var kilojouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.KilojoulePerKilogramKelvin);
            AssertEx.EqualTolerance(KilojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)kilojouleperkilogramkelvinQuantity.Value, KilojoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.KilojoulePerKilogramKelvin, kilojouleperkilogramkelvinQuantity.Unit);

            var megacaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.MegacaloriePerGramKelvin);
            AssertEx.EqualTolerance(MegacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)megacaloriepergramkelvinQuantity.Value, MegacaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.MegacaloriePerGramKelvin, megacaloriepergramkelvinQuantity.Unit);

            var megajouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(MegajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)megajouleperkilogramdegreecelsiusQuantity.Value, MegajoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.MegajoulePerKilogramDegreeCelsius, megajouleperkilogramdegreecelsiusQuantity.Unit);

            var megajouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.MegajoulePerKilogramKelvin);
            AssertEx.EqualTolerance(MegajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)megajouleperkilogramkelvinQuantity.Value, MegajoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.MegajoulePerKilogramKelvin, megajouleperkilogramkelvinQuantity.Unit);

            var microcaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.MicrocaloriePerGramKelvin);
            AssertEx.EqualTolerance(MicrocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)microcaloriepergramkelvinQuantity.Value, MicrocaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.MicrocaloriePerGramKelvin, microcaloriepergramkelvinQuantity.Unit);

            var microjouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.MicrojoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(MicrojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)microjouleperkilogramdegreecelsiusQuantity.Value, MicrojoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.MicrojoulePerKilogramDegreeCelsius, microjouleperkilogramdegreecelsiusQuantity.Unit);

            var microjouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.MicrojoulePerKilogramKelvin);
            AssertEx.EqualTolerance(MicrojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)microjouleperkilogramkelvinQuantity.Value, MicrojoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.MicrojoulePerKilogramKelvin, microjouleperkilogramkelvinQuantity.Unit);

            var millicaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.MillicaloriePerGramKelvin);
            AssertEx.EqualTolerance(MillicaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)millicaloriepergramkelvinQuantity.Value, MillicaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.MillicaloriePerGramKelvin, millicaloriepergramkelvinQuantity.Unit);

            var millijouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.MillijoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(MillijoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)millijouleperkilogramdegreecelsiusQuantity.Value, MillijoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.MillijoulePerKilogramDegreeCelsius, millijouleperkilogramdegreecelsiusQuantity.Unit);

            var millijouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.MillijoulePerKilogramKelvin);
            AssertEx.EqualTolerance(MillijoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)millijouleperkilogramkelvinQuantity.Value, MillijoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.MillijoulePerKilogramKelvin, millijouleperkilogramkelvinQuantity.Unit);

            var nanocaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.NanocaloriePerGramKelvin);
            AssertEx.EqualTolerance(NanocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)nanocaloriepergramkelvinQuantity.Value, NanocaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.NanocaloriePerGramKelvin, nanocaloriepergramkelvinQuantity.Unit);

            var nanojouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.NanojoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(NanojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)nanojouleperkilogramdegreecelsiusQuantity.Value, NanojoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.NanojoulePerKilogramDegreeCelsius, nanojouleperkilogramdegreecelsiusQuantity.Unit);

            var nanojouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.NanojoulePerKilogramKelvin);
            AssertEx.EqualTolerance(NanojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)nanojouleperkilogramkelvinQuantity.Value, NanojoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.NanojoulePerKilogramKelvin, nanojouleperkilogramkelvinQuantity.Unit);

            var petacaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.PetacaloriePerGramKelvin);
            AssertEx.EqualTolerance(PetacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)petacaloriepergramkelvinQuantity.Value, PetacaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.PetacaloriePerGramKelvin, petacaloriepergramkelvinQuantity.Unit);

            var petajouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.PetajoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(PetajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)petajouleperkilogramdegreecelsiusQuantity.Value, PetajoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.PetajoulePerKilogramDegreeCelsius, petajouleperkilogramdegreecelsiusQuantity.Unit);

            var petajouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.PetajoulePerKilogramKelvin);
            AssertEx.EqualTolerance(PetajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)petajouleperkilogramkelvinQuantity.Value, PetajoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.PetajoulePerKilogramKelvin, petajouleperkilogramkelvinQuantity.Unit);

            var picocaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.PicocaloriePerGramKelvin);
            AssertEx.EqualTolerance(PicocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)picocaloriepergramkelvinQuantity.Value, PicocaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.PicocaloriePerGramKelvin, picocaloriepergramkelvinQuantity.Unit);

            var picojouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.PicojoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(PicojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)picojouleperkilogramdegreecelsiusQuantity.Value, PicojoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.PicojoulePerKilogramDegreeCelsius, picojouleperkilogramdegreecelsiusQuantity.Unit);

            var picojouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.PicojoulePerKilogramKelvin);
            AssertEx.EqualTolerance(PicojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)picojouleperkilogramkelvinQuantity.Value, PicojoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.PicojoulePerKilogramKelvin, picojouleperkilogramkelvinQuantity.Unit);

            var qutracaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.QutracaloriePerGramKelvin);
            AssertEx.EqualTolerance(QutracaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)qutracaloriepergramkelvinQuantity.Value, QutracaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.QutracaloriePerGramKelvin, qutracaloriepergramkelvinQuantity.Unit);

            var qutrajouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.QutrajoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(QutrajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)qutrajouleperkilogramdegreecelsiusQuantity.Value, QutrajoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.QutrajoulePerKilogramDegreeCelsius, qutrajouleperkilogramdegreecelsiusQuantity.Unit);

            var qutrajouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.QutrajoulePerKilogramKelvin);
            AssertEx.EqualTolerance(QutrajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)qutrajouleperkilogramkelvinQuantity.Value, QutrajoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.QutrajoulePerKilogramKelvin, qutrajouleperkilogramkelvinQuantity.Unit);

            var teracaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.TeracaloriePerGramKelvin);
            AssertEx.EqualTolerance(TeracaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)teracaloriepergramkelvinQuantity.Value, TeracaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.TeracaloriePerGramKelvin, teracaloriepergramkelvinQuantity.Unit);

            var terajouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.TerajoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(TerajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)terajouleperkilogramdegreecelsiusQuantity.Value, TerajoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.TerajoulePerKilogramDegreeCelsius, terajouleperkilogramdegreecelsiusQuantity.Unit);

            var terajouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.TerajoulePerKilogramKelvin);
            AssertEx.EqualTolerance(TerajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)terajouleperkilogramkelvinQuantity.Value, TerajoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.TerajoulePerKilogramKelvin, terajouleperkilogramkelvinQuantity.Unit);

            var vettacaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.VettacaloriePerGramKelvin);
            AssertEx.EqualTolerance(VettacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)vettacaloriepergramkelvinQuantity.Value, VettacaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.VettacaloriePerGramKelvin, vettacaloriepergramkelvinQuantity.Unit);

            var vettajouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.VettajoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(VettajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)vettajouleperkilogramdegreecelsiusQuantity.Value, VettajoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.VettajoulePerKilogramDegreeCelsius, vettajouleperkilogramdegreecelsiusQuantity.Unit);

            var vettajouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.VettajoulePerKilogramKelvin);
            AssertEx.EqualTolerance(VettajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)vettajouleperkilogramkelvinQuantity.Value, VettajoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.VettajoulePerKilogramKelvin, vettajouleperkilogramkelvinQuantity.Unit);

            var yoctocaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.YoctocaloriePerGramKelvin);
            AssertEx.EqualTolerance(YoctocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)yoctocaloriepergramkelvinQuantity.Value, YoctocaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.YoctocaloriePerGramKelvin, yoctocaloriepergramkelvinQuantity.Unit);

            var yoctojouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.YoctojoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(YoctojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)yoctojouleperkilogramdegreecelsiusQuantity.Value, YoctojoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.YoctojoulePerKilogramDegreeCelsius, yoctojouleperkilogramdegreecelsiusQuantity.Unit);

            var yoctojouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.YoctojoulePerKilogramKelvin);
            AssertEx.EqualTolerance(YoctojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)yoctojouleperkilogramkelvinQuantity.Value, YoctojoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.YoctojoulePerKilogramKelvin, yoctojouleperkilogramkelvinQuantity.Unit);

            var yottacaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.YottacaloriePerGramKelvin);
            AssertEx.EqualTolerance(YottacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)yottacaloriepergramkelvinQuantity.Value, YottacaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.YottacaloriePerGramKelvin, yottacaloriepergramkelvinQuantity.Unit);

            var yottajouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.YottajoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(YottajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)yottajouleperkilogramdegreecelsiusQuantity.Value, YottajoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.YottajoulePerKilogramDegreeCelsius, yottajouleperkilogramdegreecelsiusQuantity.Unit);

            var yottajouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.YottajoulePerKilogramKelvin);
            AssertEx.EqualTolerance(YottajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)yottajouleperkilogramkelvinQuantity.Value, YottajoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.YottajoulePerKilogramKelvin, yottajouleperkilogramkelvinQuantity.Unit);

            var zeptocaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.ZeptocaloriePerGramKelvin);
            AssertEx.EqualTolerance(ZeptocaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)zeptocaloriepergramkelvinQuantity.Value, ZeptocaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.ZeptocaloriePerGramKelvin, zeptocaloriepergramkelvinQuantity.Unit);

            var zeptojouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.ZeptojoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(ZeptojoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)zeptojouleperkilogramdegreecelsiusQuantity.Value, ZeptojoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.ZeptojoulePerKilogramDegreeCelsius, zeptojouleperkilogramdegreecelsiusQuantity.Unit);

            var zeptojouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.ZeptojoulePerKilogramKelvin);
            AssertEx.EqualTolerance(ZeptojoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)zeptojouleperkilogramkelvinQuantity.Value, ZeptojoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.ZeptojoulePerKilogramKelvin, zeptojouleperkilogramkelvinQuantity.Unit);

            var zettacaloriepergramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.ZettacaloriePerGramKelvin);
            AssertEx.EqualTolerance(ZettacaloriesPerGramKelvinInOneJoulePerKilogramKelvin, (double)zettacaloriepergramkelvinQuantity.Value, ZettacaloriesPerGramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.ZettacaloriePerGramKelvin, zettacaloriepergramkelvinQuantity.Unit);

            var zettajouleperkilogramdegreecelsiusQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.ZettajoulePerKilogramDegreeCelsius);
            AssertEx.EqualTolerance(ZettajoulesPerKilogramDegreeCelsiusInOneJoulePerKilogramKelvin, (double)zettajouleperkilogramdegreecelsiusQuantity.Value, ZettajoulesPerKilogramDegreeCelsiusTolerance);
            Assert.Equal(SpecificEntropyUnit.ZettajoulePerKilogramDegreeCelsius, zettajouleperkilogramdegreecelsiusQuantity.Unit);

            var zettajouleperkilogramkelvinQuantity = jouleperkilogramkelvin.ToUnit(SpecificEntropyUnit.ZettajoulePerKilogramKelvin);
            AssertEx.EqualTolerance(ZettajoulesPerKilogramKelvinInOneJoulePerKilogramKelvin, (double)zettajouleperkilogramkelvinQuantity.Value, ZettajoulesPerKilogramKelvinTolerance);
            Assert.Equal(SpecificEntropyUnit.ZettajoulePerKilogramKelvin, zettajouleperkilogramkelvinQuantity.Unit);
        }

        [Fact]
        public void ConversionRoundTrip()
        {
            SpecificEntropy jouleperkilogramkelvin = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromAttocaloriesPerGramKelvin(jouleperkilogramkelvin.AttocaloriesPerGramKelvin).JoulesPerKilogramKelvin, AttocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromAttojoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.AttojoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, AttojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromAttojoulesPerKilogramKelvin(jouleperkilogramkelvin.AttojoulesPerKilogramKelvin).JoulesPerKilogramKelvin, AttojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromBtusPerPoundFahrenheit(jouleperkilogramkelvin.BtusPerPoundFahrenheit).JoulesPerKilogramKelvin, BtusPerPoundFahrenheitTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromCaloriesPerGramKelvin(jouleperkilogramkelvin.CaloriesPerGramKelvin).JoulesPerKilogramKelvin, CaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromCenticaloriesPerGramKelvin(jouleperkilogramkelvin.CenticaloriesPerGramKelvin).JoulesPerKilogramKelvin, CenticaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromCentijoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.CentijoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, CentijoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromCentijoulesPerKilogramKelvin(jouleperkilogramkelvin.CentijoulesPerKilogramKelvin).JoulesPerKilogramKelvin, CentijoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromDecacaloriesPerGramKelvin(jouleperkilogramkelvin.DecacaloriesPerGramKelvin).JoulesPerKilogramKelvin, DecacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromDecajoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.DecajoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, DecajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromDecajoulesPerKilogramKelvin(jouleperkilogramkelvin.DecajoulesPerKilogramKelvin).JoulesPerKilogramKelvin, DecajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromDecicaloriesPerGramKelvin(jouleperkilogramkelvin.DecicaloriesPerGramKelvin).JoulesPerKilogramKelvin, DecicaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromDecijoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.DecijoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, DecijoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromDecijoulesPerKilogramKelvin(jouleperkilogramkelvin.DecijoulesPerKilogramKelvin).JoulesPerKilogramKelvin, DecijoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromExacaloriesPerGramKelvin(jouleperkilogramkelvin.ExacaloriesPerGramKelvin).JoulesPerKilogramKelvin, ExacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromExajoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.ExajoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, ExajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromExajoulesPerKilogramKelvin(jouleperkilogramkelvin.ExajoulesPerKilogramKelvin).JoulesPerKilogramKelvin, ExajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromFemtocaloriesPerGramKelvin(jouleperkilogramkelvin.FemtocaloriesPerGramKelvin).JoulesPerKilogramKelvin, FemtocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromFemtojoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.FemtojoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, FemtojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromFemtojoulesPerKilogramKelvin(jouleperkilogramkelvin.FemtojoulesPerKilogramKelvin).JoulesPerKilogramKelvin, FemtojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromGigacaloriesPerGramKelvin(jouleperkilogramkelvin.GigacaloriesPerGramKelvin).JoulesPerKilogramKelvin, GigacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromGigajoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.GigajoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, GigajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromGigajoulesPerKilogramKelvin(jouleperkilogramkelvin.GigajoulesPerKilogramKelvin).JoulesPerKilogramKelvin, GigajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromHectocaloriesPerGramKelvin(jouleperkilogramkelvin.HectocaloriesPerGramKelvin).JoulesPerKilogramKelvin, HectocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromHectojoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.HectojoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, HectojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromHectojoulesPerKilogramKelvin(jouleperkilogramkelvin.HectojoulesPerKilogramKelvin).JoulesPerKilogramKelvin, HectojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromJoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.JoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, JoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromJoulesPerKilogramKelvin(jouleperkilogramkelvin.JoulesPerKilogramKelvin).JoulesPerKilogramKelvin, JoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromKilocaloriesPerGramKelvin(jouleperkilogramkelvin.KilocaloriesPerGramKelvin).JoulesPerKilogramKelvin, KilocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromKilojoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.KilojoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, KilojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromKilojoulesPerKilogramKelvin(jouleperkilogramkelvin.KilojoulesPerKilogramKelvin).JoulesPerKilogramKelvin, KilojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromMegacaloriesPerGramKelvin(jouleperkilogramkelvin.MegacaloriesPerGramKelvin).JoulesPerKilogramKelvin, MegacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromMegajoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.MegajoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, MegajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromMegajoulesPerKilogramKelvin(jouleperkilogramkelvin.MegajoulesPerKilogramKelvin).JoulesPerKilogramKelvin, MegajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromMicrocaloriesPerGramKelvin(jouleperkilogramkelvin.MicrocaloriesPerGramKelvin).JoulesPerKilogramKelvin, MicrocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromMicrojoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.MicrojoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, MicrojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromMicrojoulesPerKilogramKelvin(jouleperkilogramkelvin.MicrojoulesPerKilogramKelvin).JoulesPerKilogramKelvin, MicrojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromMillicaloriesPerGramKelvin(jouleperkilogramkelvin.MillicaloriesPerGramKelvin).JoulesPerKilogramKelvin, MillicaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromMillijoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.MillijoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, MillijoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromMillijoulesPerKilogramKelvin(jouleperkilogramkelvin.MillijoulesPerKilogramKelvin).JoulesPerKilogramKelvin, MillijoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromNanocaloriesPerGramKelvin(jouleperkilogramkelvin.NanocaloriesPerGramKelvin).JoulesPerKilogramKelvin, NanocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromNanojoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.NanojoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, NanojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromNanojoulesPerKilogramKelvin(jouleperkilogramkelvin.NanojoulesPerKilogramKelvin).JoulesPerKilogramKelvin, NanojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromPetacaloriesPerGramKelvin(jouleperkilogramkelvin.PetacaloriesPerGramKelvin).JoulesPerKilogramKelvin, PetacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromPetajoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.PetajoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, PetajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromPetajoulesPerKilogramKelvin(jouleperkilogramkelvin.PetajoulesPerKilogramKelvin).JoulesPerKilogramKelvin, PetajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromPicocaloriesPerGramKelvin(jouleperkilogramkelvin.PicocaloriesPerGramKelvin).JoulesPerKilogramKelvin, PicocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromPicojoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.PicojoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, PicojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromPicojoulesPerKilogramKelvin(jouleperkilogramkelvin.PicojoulesPerKilogramKelvin).JoulesPerKilogramKelvin, PicojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromQutracaloriesPerGramKelvin(jouleperkilogramkelvin.QutracaloriesPerGramKelvin).JoulesPerKilogramKelvin, QutracaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromQutrajoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.QutrajoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, QutrajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromQutrajoulesPerKilogramKelvin(jouleperkilogramkelvin.QutrajoulesPerKilogramKelvin).JoulesPerKilogramKelvin, QutrajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromTeracaloriesPerGramKelvin(jouleperkilogramkelvin.TeracaloriesPerGramKelvin).JoulesPerKilogramKelvin, TeracaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromTerajoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.TerajoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, TerajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromTerajoulesPerKilogramKelvin(jouleperkilogramkelvin.TerajoulesPerKilogramKelvin).JoulesPerKilogramKelvin, TerajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromVettacaloriesPerGramKelvin(jouleperkilogramkelvin.VettacaloriesPerGramKelvin).JoulesPerKilogramKelvin, VettacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromVettajoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.VettajoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, VettajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromVettajoulesPerKilogramKelvin(jouleperkilogramkelvin.VettajoulesPerKilogramKelvin).JoulesPerKilogramKelvin, VettajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromYoctocaloriesPerGramKelvin(jouleperkilogramkelvin.YoctocaloriesPerGramKelvin).JoulesPerKilogramKelvin, YoctocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromYoctojoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.YoctojoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, YoctojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromYoctojoulesPerKilogramKelvin(jouleperkilogramkelvin.YoctojoulesPerKilogramKelvin).JoulesPerKilogramKelvin, YoctojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromYottacaloriesPerGramKelvin(jouleperkilogramkelvin.YottacaloriesPerGramKelvin).JoulesPerKilogramKelvin, YottacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromYottajoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.YottajoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, YottajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromYottajoulesPerKilogramKelvin(jouleperkilogramkelvin.YottajoulesPerKilogramKelvin).JoulesPerKilogramKelvin, YottajoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromZeptocaloriesPerGramKelvin(jouleperkilogramkelvin.ZeptocaloriesPerGramKelvin).JoulesPerKilogramKelvin, ZeptocaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromZeptojoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.ZeptojoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, ZeptojoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromZeptojoulesPerKilogramKelvin(jouleperkilogramkelvin.ZeptojoulesPerKilogramKelvin).JoulesPerKilogramKelvin, ZeptojoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromZettacaloriesPerGramKelvin(jouleperkilogramkelvin.ZettacaloriesPerGramKelvin).JoulesPerKilogramKelvin, ZettacaloriesPerGramKelvinTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromZettajoulesPerKilogramDegreeCelsius(jouleperkilogramkelvin.ZettajoulesPerKilogramDegreeCelsius).JoulesPerKilogramKelvin, ZettajoulesPerKilogramDegreeCelsiusTolerance);
            AssertEx.EqualTolerance(1, SpecificEntropy.FromZettajoulesPerKilogramKelvin(jouleperkilogramkelvin.ZettajoulesPerKilogramKelvin).JoulesPerKilogramKelvin, ZettajoulesPerKilogramKelvinTolerance);
        }

        [Fact]
        public void ArithmeticOperators()
        {
            SpecificEntropy v = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            AssertEx.EqualTolerance(-1, -v.JoulesPerKilogramKelvin, JoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(2, (SpecificEntropy.FromJoulesPerKilogramKelvin(3)-v).JoulesPerKilogramKelvin, JoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(2, (v + v).JoulesPerKilogramKelvin, JoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(10, (v*10).JoulesPerKilogramKelvin, JoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(10, (10*v).JoulesPerKilogramKelvin, JoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(2, (SpecificEntropy.FromJoulesPerKilogramKelvin(10)/5).JoulesPerKilogramKelvin, JoulesPerKilogramKelvinTolerance);
            AssertEx.EqualTolerance(2, SpecificEntropy.FromJoulesPerKilogramKelvin(10)/SpecificEntropy.FromJoulesPerKilogramKelvin(5), JoulesPerKilogramKelvinTolerance);
        }

        [Fact]
        public void ComparisonOperators()
        {
            SpecificEntropy oneJoulePerKilogramKelvin = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            SpecificEntropy twoJoulesPerKilogramKelvin = SpecificEntropy.FromJoulesPerKilogramKelvin(2);

            Assert.True(oneJoulePerKilogramKelvin < twoJoulesPerKilogramKelvin);
            Assert.True(oneJoulePerKilogramKelvin <= twoJoulesPerKilogramKelvin);
            Assert.True(twoJoulesPerKilogramKelvin > oneJoulePerKilogramKelvin);
            Assert.True(twoJoulesPerKilogramKelvin >= oneJoulePerKilogramKelvin);

            Assert.False(oneJoulePerKilogramKelvin > twoJoulesPerKilogramKelvin);
            Assert.False(oneJoulePerKilogramKelvin >= twoJoulesPerKilogramKelvin);
            Assert.False(twoJoulesPerKilogramKelvin < oneJoulePerKilogramKelvin);
            Assert.False(twoJoulesPerKilogramKelvin <= oneJoulePerKilogramKelvin);
        }

        [Fact]
        public void CompareToIsImplemented()
        {
            SpecificEntropy jouleperkilogramkelvin = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            Assert.Equal(0, jouleperkilogramkelvin.CompareTo(jouleperkilogramkelvin));
            Assert.True(jouleperkilogramkelvin.CompareTo(SpecificEntropy.Zero) > 0);
            Assert.True(SpecificEntropy.Zero.CompareTo(jouleperkilogramkelvin) < 0);
        }

        [Fact]
        public void CompareToThrowsOnTypeMismatch()
        {
            SpecificEntropy jouleperkilogramkelvin = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            Assert.Throws<ArgumentException>(() => jouleperkilogramkelvin.CompareTo(new object()));
        }

        [Fact]
        public void CompareToThrowsOnNull()
        {
            SpecificEntropy jouleperkilogramkelvin = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            Assert.Throws<ArgumentNullException>(() => jouleperkilogramkelvin.CompareTo(null));
        }

        [Fact]
        public void EqualityOperators()
        {
            var a = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            var b = SpecificEntropy.FromJoulesPerKilogramKelvin(2);

 // ReSharper disable EqualExpressionComparison

            Assert.True(a == a);
            Assert.False(a != a);

            Assert.True(a != b);
            Assert.False(a == b);

            Assert.False(a == null);
            Assert.False(null == a);

// ReSharper restore EqualExpressionComparison
        }

        [Fact]
        public void EqualsIsImplemented()
        {
            var a = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            var b = SpecificEntropy.FromJoulesPerKilogramKelvin(2);

            Assert.True(a.Equals(a));
            Assert.False(a.Equals(b));
            Assert.False(a.Equals(null));
        }

        [Fact]
        public void EqualsRelativeToleranceIsImplemented()
        {
            var v = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            Assert.True(v.Equals(SpecificEntropy.FromJoulesPerKilogramKelvin(1), JoulesPerKilogramKelvinTolerance, ComparisonType.Relative));
            Assert.False(v.Equals(SpecificEntropy.Zero, JoulesPerKilogramKelvinTolerance, ComparisonType.Relative));
        }

        [Fact]
        public void EqualsReturnsFalseOnTypeMismatch()
        {
            SpecificEntropy jouleperkilogramkelvin = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            Assert.False(jouleperkilogramkelvin.Equals(new object()));
        }

        [Fact]
        public void EqualsReturnsFalseOnNull()
        {
            SpecificEntropy jouleperkilogramkelvin = SpecificEntropy.FromJoulesPerKilogramKelvin(1);
            Assert.False(jouleperkilogramkelvin.Equals(null));
        }

        [Fact]
        public void UnitsDoesNotContainUndefined()
        {
            Assert.DoesNotContain(SpecificEntropyUnit.Undefined, SpecificEntropy.Units);
        }

        [Fact]
        public void HasAtLeastOneAbbreviationSpecified()
        {
            var units = Enum.GetValues(typeof(SpecificEntropyUnit)).Cast<SpecificEntropyUnit>();
            foreach(var unit in units)
            {
                if(unit == SpecificEntropyUnit.Undefined)
                    continue;

                var defaultAbbreviation = UnitAbbreviationsCache.Default.GetDefaultAbbreviation(unit);
            }
        }

        [Fact]
        public void BaseDimensionsShouldNeverBeNull()
        {
            Assert.False(SpecificEntropy.BaseDimensions is null);
        }
    }
}
