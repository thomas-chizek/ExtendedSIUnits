//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;
using System.Linq;
using UnitsNet.Units;
using Xunit;

// Disable build warning CS1718: Comparison made to same variable; did you mean to compare something else?
#pragma warning disable 1718

// ReSharper disable once CheckNamespace
namespace UnitsNet.Tests
{
    /// <summary>
    /// Test of Volume.
    /// </summary>
// ReSharper disable once PartialTypeWithSinglePart
    public abstract partial class VolumeTestsBase
    {
        protected abstract double AcreFeetInOneCubicMeter { get; }
        protected abstract double AttocubicFeetInOneCubicMeter { get; }
        protected abstract double AttocubicMetersInOneCubicMeter { get; }
        protected abstract double AttolitersInOneCubicMeter { get; }
        protected abstract double AuTablespoonsInOneCubicMeter { get; }
        protected abstract double CenticubicFeetInOneCubicMeter { get; }
        protected abstract double CenticubicMetersInOneCubicMeter { get; }
        protected abstract double CentilitersInOneCubicMeter { get; }
        protected abstract double CubicCentimetersInOneCubicMeter { get; }
        protected abstract double CubicDecimetersInOneCubicMeter { get; }
        protected abstract double CubicFeetInOneCubicMeter { get; }
        protected abstract double CubicHectometersInOneCubicMeter { get; }
        protected abstract double CubicInchesInOneCubicMeter { get; }
        protected abstract double CubicKilometersInOneCubicMeter { get; }
        protected abstract double CubicMetersInOneCubicMeter { get; }
        protected abstract double CubicMicrometersInOneCubicMeter { get; }
        protected abstract double CubicMilesInOneCubicMeter { get; }
        protected abstract double CubicMillimetersInOneCubicMeter { get; }
        protected abstract double CubicYardsInOneCubicMeter { get; }
        protected abstract double DecacubicFeetInOneCubicMeter { get; }
        protected abstract double DecacubicMetersInOneCubicMeter { get; }
        protected abstract double DecalitersInOneCubicMeter { get; }
        protected abstract double DecicubicFeetInOneCubicMeter { get; }
        protected abstract double DecicubicMetersInOneCubicMeter { get; }
        protected abstract double DecilitersInOneCubicMeter { get; }
        protected abstract double ExacubicFeetInOneCubicMeter { get; }
        protected abstract double ExacubicMetersInOneCubicMeter { get; }
        protected abstract double ExalitersInOneCubicMeter { get; }
        protected abstract double FemtocubicFeetInOneCubicMeter { get; }
        protected abstract double FemtocubicMetersInOneCubicMeter { get; }
        protected abstract double FemtolitersInOneCubicMeter { get; }
        protected abstract double GigacubicFeetInOneCubicMeter { get; }
        protected abstract double GigacubicMetersInOneCubicMeter { get; }
        protected abstract double GigalitersInOneCubicMeter { get; }
        protected abstract double HectocubicFeetInOneCubicMeter { get; }
        protected abstract double HectocubicMetersInOneCubicMeter { get; }
        protected abstract double HectolitersInOneCubicMeter { get; }
        protected abstract double ImperialBeerBarrelsInOneCubicMeter { get; }
        protected abstract double ImperialGallonsInOneCubicMeter { get; }
        protected abstract double ImperialOuncesInOneCubicMeter { get; }
        protected abstract double ImperialPintsInOneCubicMeter { get; }
        protected abstract double KilocubicFeetInOneCubicMeter { get; }
        protected abstract double KilocubicMetersInOneCubicMeter { get; }
        protected abstract double KiloimperialGallonsInOneCubicMeter { get; }
        protected abstract double KilolitersInOneCubicMeter { get; }
        protected abstract double KilousGallonsInOneCubicMeter { get; }
        protected abstract double LitersInOneCubicMeter { get; }
        protected abstract double MegacubicFeetInOneCubicMeter { get; }
        protected abstract double MegacubicMetersInOneCubicMeter { get; }
        protected abstract double MegaimperialGallonsInOneCubicMeter { get; }
        protected abstract double MegalitersInOneCubicMeter { get; }
        protected abstract double MegausGallonsInOneCubicMeter { get; }
        protected abstract double MetricCupsInOneCubicMeter { get; }
        protected abstract double MetricTeaspoonsInOneCubicMeter { get; }
        protected abstract double MicrocubicFeetInOneCubicMeter { get; }
        protected abstract double MicrocubicMetersInOneCubicMeter { get; }
        protected abstract double MicrolitersInOneCubicMeter { get; }
        protected abstract double MillicubicFeetInOneCubicMeter { get; }
        protected abstract double MillicubicMetersInOneCubicMeter { get; }
        protected abstract double MillilitersInOneCubicMeter { get; }
        protected abstract double NanocubicFeetInOneCubicMeter { get; }
        protected abstract double NanocubicMetersInOneCubicMeter { get; }
        protected abstract double NanolitersInOneCubicMeter { get; }
        protected abstract double OilBarrelsInOneCubicMeter { get; }
        protected abstract double PetacubicFeetInOneCubicMeter { get; }
        protected abstract double PetacubicMetersInOneCubicMeter { get; }
        protected abstract double PetalitersInOneCubicMeter { get; }
        protected abstract double PicocubicFeetInOneCubicMeter { get; }
        protected abstract double PicocubicMetersInOneCubicMeter { get; }
        protected abstract double PicolitersInOneCubicMeter { get; }
        protected abstract double QutracubicFeetInOneCubicMeter { get; }
        protected abstract double QutracubicMetersInOneCubicMeter { get; }
        protected abstract double QutralitersInOneCubicMeter { get; }
        protected abstract double TeracubicFeetInOneCubicMeter { get; }
        protected abstract double TeracubicMetersInOneCubicMeter { get; }
        protected abstract double TeralitersInOneCubicMeter { get; }
        protected abstract double UkTablespoonsInOneCubicMeter { get; }
        protected abstract double UsBeerBarrelsInOneCubicMeter { get; }
        protected abstract double UsCustomaryCupsInOneCubicMeter { get; }
        protected abstract double UsGallonsInOneCubicMeter { get; }
        protected abstract double UsLegalCupsInOneCubicMeter { get; }
        protected abstract double UsOuncesInOneCubicMeter { get; }
        protected abstract double UsPintsInOneCubicMeter { get; }
        protected abstract double UsQuartsInOneCubicMeter { get; }
        protected abstract double UsTablespoonsInOneCubicMeter { get; }
        protected abstract double UsTeaspoonsInOneCubicMeter { get; }
        protected abstract double VettacubicFeetInOneCubicMeter { get; }
        protected abstract double VettacubicMetersInOneCubicMeter { get; }
        protected abstract double VettalitersInOneCubicMeter { get; }
        protected abstract double YoctocubicFeetInOneCubicMeter { get; }
        protected abstract double YoctocubicMetersInOneCubicMeter { get; }
        protected abstract double YoctolitersInOneCubicMeter { get; }
        protected abstract double YottacubicFeetInOneCubicMeter { get; }
        protected abstract double YottacubicMetersInOneCubicMeter { get; }
        protected abstract double YottalitersInOneCubicMeter { get; }
        protected abstract double ZeptocubicFeetInOneCubicMeter { get; }
        protected abstract double ZeptocubicMetersInOneCubicMeter { get; }
        protected abstract double ZeptolitersInOneCubicMeter { get; }
        protected abstract double ZettacubicFeetInOneCubicMeter { get; }
        protected abstract double ZettacubicMetersInOneCubicMeter { get; }
        protected abstract double ZettalitersInOneCubicMeter { get; }

// ReSharper disable VirtualMemberNeverOverriden.Global
        protected virtual double AcreFeetTolerance { get { return 1e-5; } }
        protected virtual double AttocubicFeetTolerance { get { return 1e-5; } }
        protected virtual double AttocubicMetersTolerance { get { return 1e-5; } }
        protected virtual double AttolitersTolerance { get { return 1e-5; } }
        protected virtual double AuTablespoonsTolerance { get { return 1e-5; } }
        protected virtual double CenticubicFeetTolerance { get { return 1e-5; } }
        protected virtual double CenticubicMetersTolerance { get { return 1e-5; } }
        protected virtual double CentilitersTolerance { get { return 1e-5; } }
        protected virtual double CubicCentimetersTolerance { get { return 1e-5; } }
        protected virtual double CubicDecimetersTolerance { get { return 1e-5; } }
        protected virtual double CubicFeetTolerance { get { return 1e-5; } }
        protected virtual double CubicHectometersTolerance { get { return 1e-5; } }
        protected virtual double CubicInchesTolerance { get { return 1e-5; } }
        protected virtual double CubicKilometersTolerance { get { return 1e-5; } }
        protected virtual double CubicMetersTolerance { get { return 1e-5; } }
        protected virtual double CubicMicrometersTolerance { get { return 1e-5; } }
        protected virtual double CubicMilesTolerance { get { return 1e-5; } }
        protected virtual double CubicMillimetersTolerance { get { return 1e-5; } }
        protected virtual double CubicYardsTolerance { get { return 1e-5; } }
        protected virtual double DecacubicFeetTolerance { get { return 1e-5; } }
        protected virtual double DecacubicMetersTolerance { get { return 1e-5; } }
        protected virtual double DecalitersTolerance { get { return 1e-5; } }
        protected virtual double DecicubicFeetTolerance { get { return 1e-5; } }
        protected virtual double DecicubicMetersTolerance { get { return 1e-5; } }
        protected virtual double DecilitersTolerance { get { return 1e-5; } }
        protected virtual double ExacubicFeetTolerance { get { return 1e-5; } }
        protected virtual double ExacubicMetersTolerance { get { return 1e-5; } }
        protected virtual double ExalitersTolerance { get { return 1e-5; } }
        protected virtual double FemtocubicFeetTolerance { get { return 1e-5; } }
        protected virtual double FemtocubicMetersTolerance { get { return 1e-5; } }
        protected virtual double FemtolitersTolerance { get { return 1e-5; } }
        protected virtual double GigacubicFeetTolerance { get { return 1e-5; } }
        protected virtual double GigacubicMetersTolerance { get { return 1e-5; } }
        protected virtual double GigalitersTolerance { get { return 1e-5; } }
        protected virtual double HectocubicFeetTolerance { get { return 1e-5; } }
        protected virtual double HectocubicMetersTolerance { get { return 1e-5; } }
        protected virtual double HectolitersTolerance { get { return 1e-5; } }
        protected virtual double ImperialBeerBarrelsTolerance { get { return 1e-5; } }
        protected virtual double ImperialGallonsTolerance { get { return 1e-5; } }
        protected virtual double ImperialOuncesTolerance { get { return 1e-5; } }
        protected virtual double ImperialPintsTolerance { get { return 1e-5; } }
        protected virtual double KilocubicFeetTolerance { get { return 1e-5; } }
        protected virtual double KilocubicMetersTolerance { get { return 1e-5; } }
        protected virtual double KiloimperialGallonsTolerance { get { return 1e-5; } }
        protected virtual double KilolitersTolerance { get { return 1e-5; } }
        protected virtual double KilousGallonsTolerance { get { return 1e-5; } }
        protected virtual double LitersTolerance { get { return 1e-5; } }
        protected virtual double MegacubicFeetTolerance { get { return 1e-5; } }
        protected virtual double MegacubicMetersTolerance { get { return 1e-5; } }
        protected virtual double MegaimperialGallonsTolerance { get { return 1e-5; } }
        protected virtual double MegalitersTolerance { get { return 1e-5; } }
        protected virtual double MegausGallonsTolerance { get { return 1e-5; } }
        protected virtual double MetricCupsTolerance { get { return 1e-5; } }
        protected virtual double MetricTeaspoonsTolerance { get { return 1e-5; } }
        protected virtual double MicrocubicFeetTolerance { get { return 1e-5; } }
        protected virtual double MicrocubicMetersTolerance { get { return 1e-5; } }
        protected virtual double MicrolitersTolerance { get { return 1e-5; } }
        protected virtual double MillicubicFeetTolerance { get { return 1e-5; } }
        protected virtual double MillicubicMetersTolerance { get { return 1e-5; } }
        protected virtual double MillilitersTolerance { get { return 1e-5; } }
        protected virtual double NanocubicFeetTolerance { get { return 1e-5; } }
        protected virtual double NanocubicMetersTolerance { get { return 1e-5; } }
        protected virtual double NanolitersTolerance { get { return 1e-5; } }
        protected virtual double OilBarrelsTolerance { get { return 1e-5; } }
        protected virtual double PetacubicFeetTolerance { get { return 1e-5; } }
        protected virtual double PetacubicMetersTolerance { get { return 1e-5; } }
        protected virtual double PetalitersTolerance { get { return 1e-5; } }
        protected virtual double PicocubicFeetTolerance { get { return 1e-5; } }
        protected virtual double PicocubicMetersTolerance { get { return 1e-5; } }
        protected virtual double PicolitersTolerance { get { return 1e-5; } }
        protected virtual double QutracubicFeetTolerance { get { return 1e-5; } }
        protected virtual double QutracubicMetersTolerance { get { return 1e-5; } }
        protected virtual double QutralitersTolerance { get { return 1e-5; } }
        protected virtual double TeracubicFeetTolerance { get { return 1e-5; } }
        protected virtual double TeracubicMetersTolerance { get { return 1e-5; } }
        protected virtual double TeralitersTolerance { get { return 1e-5; } }
        protected virtual double UkTablespoonsTolerance { get { return 1e-5; } }
        protected virtual double UsBeerBarrelsTolerance { get { return 1e-5; } }
        protected virtual double UsCustomaryCupsTolerance { get { return 1e-5; } }
        protected virtual double UsGallonsTolerance { get { return 1e-5; } }
        protected virtual double UsLegalCupsTolerance { get { return 1e-5; } }
        protected virtual double UsOuncesTolerance { get { return 1e-5; } }
        protected virtual double UsPintsTolerance { get { return 1e-5; } }
        protected virtual double UsQuartsTolerance { get { return 1e-5; } }
        protected virtual double UsTablespoonsTolerance { get { return 1e-5; } }
        protected virtual double UsTeaspoonsTolerance { get { return 1e-5; } }
        protected virtual double VettacubicFeetTolerance { get { return 1e-5; } }
        protected virtual double VettacubicMetersTolerance { get { return 1e-5; } }
        protected virtual double VettalitersTolerance { get { return 1e-5; } }
        protected virtual double YoctocubicFeetTolerance { get { return 1e-5; } }
        protected virtual double YoctocubicMetersTolerance { get { return 1e-5; } }
        protected virtual double YoctolitersTolerance { get { return 1e-5; } }
        protected virtual double YottacubicFeetTolerance { get { return 1e-5; } }
        protected virtual double YottacubicMetersTolerance { get { return 1e-5; } }
        protected virtual double YottalitersTolerance { get { return 1e-5; } }
        protected virtual double ZeptocubicFeetTolerance { get { return 1e-5; } }
        protected virtual double ZeptocubicMetersTolerance { get { return 1e-5; } }
        protected virtual double ZeptolitersTolerance { get { return 1e-5; } }
        protected virtual double ZettacubicFeetTolerance { get { return 1e-5; } }
        protected virtual double ZettacubicMetersTolerance { get { return 1e-5; } }
        protected virtual double ZettalitersTolerance { get { return 1e-5; } }
// ReSharper restore VirtualMemberNeverOverriden.Global

        [Fact]
        public void Ctor_WithUndefinedUnit_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => new Volume((double)0.0, VolumeUnit.Undefined));
        }

        [Fact]
        public void Ctor_WithInfinityValue_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => new Volume(double.PositiveInfinity, VolumeUnit.CubicMeter));
            Assert.Throws<ArgumentException>(() => new Volume(double.NegativeInfinity, VolumeUnit.CubicMeter));
        }

        [Fact]
        public void Ctor_WithNaNValue_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => new Volume(double.NaN, VolumeUnit.CubicMeter));
        }

        [Fact]
        public void CubicMeterToVolumeUnits()
        {
            Volume cubicmeter = Volume.FromCubicMeters(1);
            AssertEx.EqualTolerance(AcreFeetInOneCubicMeter, cubicmeter.AcreFeet, AcreFeetTolerance);
            AssertEx.EqualTolerance(AttocubicFeetInOneCubicMeter, cubicmeter.AttocubicFeet, AttocubicFeetTolerance);
            AssertEx.EqualTolerance(AttocubicMetersInOneCubicMeter, cubicmeter.AttocubicMeters, AttocubicMetersTolerance);
            AssertEx.EqualTolerance(AttolitersInOneCubicMeter, cubicmeter.Attoliters, AttolitersTolerance);
            AssertEx.EqualTolerance(AuTablespoonsInOneCubicMeter, cubicmeter.AuTablespoons, AuTablespoonsTolerance);
            AssertEx.EqualTolerance(CenticubicFeetInOneCubicMeter, cubicmeter.CenticubicFeet, CenticubicFeetTolerance);
            AssertEx.EqualTolerance(CenticubicMetersInOneCubicMeter, cubicmeter.CenticubicMeters, CenticubicMetersTolerance);
            AssertEx.EqualTolerance(CentilitersInOneCubicMeter, cubicmeter.Centiliters, CentilitersTolerance);
            AssertEx.EqualTolerance(CubicCentimetersInOneCubicMeter, cubicmeter.CubicCentimeters, CubicCentimetersTolerance);
            AssertEx.EqualTolerance(CubicDecimetersInOneCubicMeter, cubicmeter.CubicDecimeters, CubicDecimetersTolerance);
            AssertEx.EqualTolerance(CubicFeetInOneCubicMeter, cubicmeter.CubicFeet, CubicFeetTolerance);
            AssertEx.EqualTolerance(CubicHectometersInOneCubicMeter, cubicmeter.CubicHectometers, CubicHectometersTolerance);
            AssertEx.EqualTolerance(CubicInchesInOneCubicMeter, cubicmeter.CubicInches, CubicInchesTolerance);
            AssertEx.EqualTolerance(CubicKilometersInOneCubicMeter, cubicmeter.CubicKilometers, CubicKilometersTolerance);
            AssertEx.EqualTolerance(CubicMetersInOneCubicMeter, cubicmeter.CubicMeters, CubicMetersTolerance);
            AssertEx.EqualTolerance(CubicMicrometersInOneCubicMeter, cubicmeter.CubicMicrometers, CubicMicrometersTolerance);
            AssertEx.EqualTolerance(CubicMilesInOneCubicMeter, cubicmeter.CubicMiles, CubicMilesTolerance);
            AssertEx.EqualTolerance(CubicMillimetersInOneCubicMeter, cubicmeter.CubicMillimeters, CubicMillimetersTolerance);
            AssertEx.EqualTolerance(CubicYardsInOneCubicMeter, cubicmeter.CubicYards, CubicYardsTolerance);
            AssertEx.EqualTolerance(DecacubicFeetInOneCubicMeter, cubicmeter.DecacubicFeet, DecacubicFeetTolerance);
            AssertEx.EqualTolerance(DecacubicMetersInOneCubicMeter, cubicmeter.DecacubicMeters, DecacubicMetersTolerance);
            AssertEx.EqualTolerance(DecalitersInOneCubicMeter, cubicmeter.Decaliters, DecalitersTolerance);
            AssertEx.EqualTolerance(DecicubicFeetInOneCubicMeter, cubicmeter.DecicubicFeet, DecicubicFeetTolerance);
            AssertEx.EqualTolerance(DecicubicMetersInOneCubicMeter, cubicmeter.DecicubicMeters, DecicubicMetersTolerance);
            AssertEx.EqualTolerance(DecilitersInOneCubicMeter, cubicmeter.Deciliters, DecilitersTolerance);
            AssertEx.EqualTolerance(ExacubicFeetInOneCubicMeter, cubicmeter.ExacubicFeet, ExacubicFeetTolerance);
            AssertEx.EqualTolerance(ExacubicMetersInOneCubicMeter, cubicmeter.ExacubicMeters, ExacubicMetersTolerance);
            AssertEx.EqualTolerance(ExalitersInOneCubicMeter, cubicmeter.Exaliters, ExalitersTolerance);
            AssertEx.EqualTolerance(FemtocubicFeetInOneCubicMeter, cubicmeter.FemtocubicFeet, FemtocubicFeetTolerance);
            AssertEx.EqualTolerance(FemtocubicMetersInOneCubicMeter, cubicmeter.FemtocubicMeters, FemtocubicMetersTolerance);
            AssertEx.EqualTolerance(FemtolitersInOneCubicMeter, cubicmeter.Femtoliters, FemtolitersTolerance);
            AssertEx.EqualTolerance(GigacubicFeetInOneCubicMeter, cubicmeter.GigacubicFeet, GigacubicFeetTolerance);
            AssertEx.EqualTolerance(GigacubicMetersInOneCubicMeter, cubicmeter.GigacubicMeters, GigacubicMetersTolerance);
            AssertEx.EqualTolerance(GigalitersInOneCubicMeter, cubicmeter.Gigaliters, GigalitersTolerance);
            AssertEx.EqualTolerance(HectocubicFeetInOneCubicMeter, cubicmeter.HectocubicFeet, HectocubicFeetTolerance);
            AssertEx.EqualTolerance(HectocubicMetersInOneCubicMeter, cubicmeter.HectocubicMeters, HectocubicMetersTolerance);
            AssertEx.EqualTolerance(HectolitersInOneCubicMeter, cubicmeter.Hectoliters, HectolitersTolerance);
            AssertEx.EqualTolerance(ImperialBeerBarrelsInOneCubicMeter, cubicmeter.ImperialBeerBarrels, ImperialBeerBarrelsTolerance);
            AssertEx.EqualTolerance(ImperialGallonsInOneCubicMeter, cubicmeter.ImperialGallons, ImperialGallonsTolerance);
            AssertEx.EqualTolerance(ImperialOuncesInOneCubicMeter, cubicmeter.ImperialOunces, ImperialOuncesTolerance);
            AssertEx.EqualTolerance(ImperialPintsInOneCubicMeter, cubicmeter.ImperialPints, ImperialPintsTolerance);
            AssertEx.EqualTolerance(KilocubicFeetInOneCubicMeter, cubicmeter.KilocubicFeet, KilocubicFeetTolerance);
            AssertEx.EqualTolerance(KilocubicMetersInOneCubicMeter, cubicmeter.KilocubicMeters, KilocubicMetersTolerance);
            AssertEx.EqualTolerance(KiloimperialGallonsInOneCubicMeter, cubicmeter.KiloimperialGallons, KiloimperialGallonsTolerance);
            AssertEx.EqualTolerance(KilolitersInOneCubicMeter, cubicmeter.Kiloliters, KilolitersTolerance);
            AssertEx.EqualTolerance(KilousGallonsInOneCubicMeter, cubicmeter.KilousGallons, KilousGallonsTolerance);
            AssertEx.EqualTolerance(LitersInOneCubicMeter, cubicmeter.Liters, LitersTolerance);
            AssertEx.EqualTolerance(MegacubicFeetInOneCubicMeter, cubicmeter.MegacubicFeet, MegacubicFeetTolerance);
            AssertEx.EqualTolerance(MegacubicMetersInOneCubicMeter, cubicmeter.MegacubicMeters, MegacubicMetersTolerance);
            AssertEx.EqualTolerance(MegaimperialGallonsInOneCubicMeter, cubicmeter.MegaimperialGallons, MegaimperialGallonsTolerance);
            AssertEx.EqualTolerance(MegalitersInOneCubicMeter, cubicmeter.Megaliters, MegalitersTolerance);
            AssertEx.EqualTolerance(MegausGallonsInOneCubicMeter, cubicmeter.MegausGallons, MegausGallonsTolerance);
            AssertEx.EqualTolerance(MetricCupsInOneCubicMeter, cubicmeter.MetricCups, MetricCupsTolerance);
            AssertEx.EqualTolerance(MetricTeaspoonsInOneCubicMeter, cubicmeter.MetricTeaspoons, MetricTeaspoonsTolerance);
            AssertEx.EqualTolerance(MicrocubicFeetInOneCubicMeter, cubicmeter.MicrocubicFeet, MicrocubicFeetTolerance);
            AssertEx.EqualTolerance(MicrocubicMetersInOneCubicMeter, cubicmeter.MicrocubicMeters, MicrocubicMetersTolerance);
            AssertEx.EqualTolerance(MicrolitersInOneCubicMeter, cubicmeter.Microliters, MicrolitersTolerance);
            AssertEx.EqualTolerance(MillicubicFeetInOneCubicMeter, cubicmeter.MillicubicFeet, MillicubicFeetTolerance);
            AssertEx.EqualTolerance(MillicubicMetersInOneCubicMeter, cubicmeter.MillicubicMeters, MillicubicMetersTolerance);
            AssertEx.EqualTolerance(MillilitersInOneCubicMeter, cubicmeter.Milliliters, MillilitersTolerance);
            AssertEx.EqualTolerance(NanocubicFeetInOneCubicMeter, cubicmeter.NanocubicFeet, NanocubicFeetTolerance);
            AssertEx.EqualTolerance(NanocubicMetersInOneCubicMeter, cubicmeter.NanocubicMeters, NanocubicMetersTolerance);
            AssertEx.EqualTolerance(NanolitersInOneCubicMeter, cubicmeter.Nanoliters, NanolitersTolerance);
            AssertEx.EqualTolerance(OilBarrelsInOneCubicMeter, cubicmeter.OilBarrels, OilBarrelsTolerance);
            AssertEx.EqualTolerance(PetacubicFeetInOneCubicMeter, cubicmeter.PetacubicFeet, PetacubicFeetTolerance);
            AssertEx.EqualTolerance(PetacubicMetersInOneCubicMeter, cubicmeter.PetacubicMeters, PetacubicMetersTolerance);
            AssertEx.EqualTolerance(PetalitersInOneCubicMeter, cubicmeter.Petaliters, PetalitersTolerance);
            AssertEx.EqualTolerance(PicocubicFeetInOneCubicMeter, cubicmeter.PicocubicFeet, PicocubicFeetTolerance);
            AssertEx.EqualTolerance(PicocubicMetersInOneCubicMeter, cubicmeter.PicocubicMeters, PicocubicMetersTolerance);
            AssertEx.EqualTolerance(PicolitersInOneCubicMeter, cubicmeter.Picoliters, PicolitersTolerance);
            AssertEx.EqualTolerance(QutracubicFeetInOneCubicMeter, cubicmeter.QutracubicFeet, QutracubicFeetTolerance);
            AssertEx.EqualTolerance(QutracubicMetersInOneCubicMeter, cubicmeter.QutracubicMeters, QutracubicMetersTolerance);
            AssertEx.EqualTolerance(QutralitersInOneCubicMeter, cubicmeter.Qutraliters, QutralitersTolerance);
            AssertEx.EqualTolerance(TeracubicFeetInOneCubicMeter, cubicmeter.TeracubicFeet, TeracubicFeetTolerance);
            AssertEx.EqualTolerance(TeracubicMetersInOneCubicMeter, cubicmeter.TeracubicMeters, TeracubicMetersTolerance);
            AssertEx.EqualTolerance(TeralitersInOneCubicMeter, cubicmeter.Teraliters, TeralitersTolerance);
            AssertEx.EqualTolerance(UkTablespoonsInOneCubicMeter, cubicmeter.UkTablespoons, UkTablespoonsTolerance);
            AssertEx.EqualTolerance(UsBeerBarrelsInOneCubicMeter, cubicmeter.UsBeerBarrels, UsBeerBarrelsTolerance);
            AssertEx.EqualTolerance(UsCustomaryCupsInOneCubicMeter, cubicmeter.UsCustomaryCups, UsCustomaryCupsTolerance);
            AssertEx.EqualTolerance(UsGallonsInOneCubicMeter, cubicmeter.UsGallons, UsGallonsTolerance);
            AssertEx.EqualTolerance(UsLegalCupsInOneCubicMeter, cubicmeter.UsLegalCups, UsLegalCupsTolerance);
            AssertEx.EqualTolerance(UsOuncesInOneCubicMeter, cubicmeter.UsOunces, UsOuncesTolerance);
            AssertEx.EqualTolerance(UsPintsInOneCubicMeter, cubicmeter.UsPints, UsPintsTolerance);
            AssertEx.EqualTolerance(UsQuartsInOneCubicMeter, cubicmeter.UsQuarts, UsQuartsTolerance);
            AssertEx.EqualTolerance(UsTablespoonsInOneCubicMeter, cubicmeter.UsTablespoons, UsTablespoonsTolerance);
            AssertEx.EqualTolerance(UsTeaspoonsInOneCubicMeter, cubicmeter.UsTeaspoons, UsTeaspoonsTolerance);
            AssertEx.EqualTolerance(VettacubicFeetInOneCubicMeter, cubicmeter.VettacubicFeet, VettacubicFeetTolerance);
            AssertEx.EqualTolerance(VettacubicMetersInOneCubicMeter, cubicmeter.VettacubicMeters, VettacubicMetersTolerance);
            AssertEx.EqualTolerance(VettalitersInOneCubicMeter, cubicmeter.Vettaliters, VettalitersTolerance);
            AssertEx.EqualTolerance(YoctocubicFeetInOneCubicMeter, cubicmeter.YoctocubicFeet, YoctocubicFeetTolerance);
            AssertEx.EqualTolerance(YoctocubicMetersInOneCubicMeter, cubicmeter.YoctocubicMeters, YoctocubicMetersTolerance);
            AssertEx.EqualTolerance(YoctolitersInOneCubicMeter, cubicmeter.Yoctoliters, YoctolitersTolerance);
            AssertEx.EqualTolerance(YottacubicFeetInOneCubicMeter, cubicmeter.YottacubicFeet, YottacubicFeetTolerance);
            AssertEx.EqualTolerance(YottacubicMetersInOneCubicMeter, cubicmeter.YottacubicMeters, YottacubicMetersTolerance);
            AssertEx.EqualTolerance(YottalitersInOneCubicMeter, cubicmeter.Yottaliters, YottalitersTolerance);
            AssertEx.EqualTolerance(ZeptocubicFeetInOneCubicMeter, cubicmeter.ZeptocubicFeet, ZeptocubicFeetTolerance);
            AssertEx.EqualTolerance(ZeptocubicMetersInOneCubicMeter, cubicmeter.ZeptocubicMeters, ZeptocubicMetersTolerance);
            AssertEx.EqualTolerance(ZeptolitersInOneCubicMeter, cubicmeter.Zeptoliters, ZeptolitersTolerance);
            AssertEx.EqualTolerance(ZettacubicFeetInOneCubicMeter, cubicmeter.ZettacubicFeet, ZettacubicFeetTolerance);
            AssertEx.EqualTolerance(ZettacubicMetersInOneCubicMeter, cubicmeter.ZettacubicMeters, ZettacubicMetersTolerance);
            AssertEx.EqualTolerance(ZettalitersInOneCubicMeter, cubicmeter.Zettaliters, ZettalitersTolerance);
        }

        [Fact]
        public void FromValueAndUnit()
        {
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.AcreFoot).AcreFeet, AcreFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.AttocubicFoot).AttocubicFeet, AttocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.AttocubicMeter).AttocubicMeters, AttocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Attoliter).Attoliters, AttolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.AuTablespoon).AuTablespoons, AuTablespoonsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CenticubicFoot).CenticubicFeet, CenticubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CenticubicMeter).CenticubicMeters, CenticubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Centiliter).Centiliters, CentilitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CubicCentimeter).CubicCentimeters, CubicCentimetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CubicDecimeter).CubicDecimeters, CubicDecimetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CubicFoot).CubicFeet, CubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CubicHectometer).CubicHectometers, CubicHectometersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CubicInch).CubicInches, CubicInchesTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CubicKilometer).CubicKilometers, CubicKilometersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CubicMeter).CubicMeters, CubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CubicMicrometer).CubicMicrometers, CubicMicrometersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CubicMile).CubicMiles, CubicMilesTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CubicMillimeter).CubicMillimeters, CubicMillimetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.CubicYard).CubicYards, CubicYardsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.DecacubicFoot).DecacubicFeet, DecacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.DecacubicMeter).DecacubicMeters, DecacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Decaliter).Decaliters, DecalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.DecicubicFoot).DecicubicFeet, DecicubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.DecicubicMeter).DecicubicMeters, DecicubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Deciliter).Deciliters, DecilitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.ExacubicFoot).ExacubicFeet, ExacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.ExacubicMeter).ExacubicMeters, ExacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Exaliter).Exaliters, ExalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.FemtocubicFoot).FemtocubicFeet, FemtocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.FemtocubicMeter).FemtocubicMeters, FemtocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Femtoliter).Femtoliters, FemtolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.GigacubicFoot).GigacubicFeet, GigacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.GigacubicMeter).GigacubicMeters, GigacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Gigaliter).Gigaliters, GigalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.HectocubicFoot).HectocubicFeet, HectocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.HectocubicMeter).HectocubicMeters, HectocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Hectoliter).Hectoliters, HectolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.ImperialBeerBarrel).ImperialBeerBarrels, ImperialBeerBarrelsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.ImperialGallon).ImperialGallons, ImperialGallonsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.ImperialOunce).ImperialOunces, ImperialOuncesTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.ImperialPint).ImperialPints, ImperialPintsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.KilocubicFoot).KilocubicFeet, KilocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.KilocubicMeter).KilocubicMeters, KilocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.KiloimperialGallon).KiloimperialGallons, KiloimperialGallonsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Kiloliter).Kiloliters, KilolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.KilousGallon).KilousGallons, KilousGallonsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Liter).Liters, LitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.MegacubicFoot).MegacubicFeet, MegacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.MegacubicMeter).MegacubicMeters, MegacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.MegaimperialGallon).MegaimperialGallons, MegaimperialGallonsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Megaliter).Megaliters, MegalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.MegausGallon).MegausGallons, MegausGallonsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.MetricCup).MetricCups, MetricCupsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.MetricTeaspoon).MetricTeaspoons, MetricTeaspoonsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.MicrocubicFoot).MicrocubicFeet, MicrocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.MicrocubicMeter).MicrocubicMeters, MicrocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Microliter).Microliters, MicrolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.MillicubicFoot).MillicubicFeet, MillicubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.MillicubicMeter).MillicubicMeters, MillicubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Milliliter).Milliliters, MillilitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.NanocubicFoot).NanocubicFeet, NanocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.NanocubicMeter).NanocubicMeters, NanocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Nanoliter).Nanoliters, NanolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.OilBarrel).OilBarrels, OilBarrelsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.PetacubicFoot).PetacubicFeet, PetacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.PetacubicMeter).PetacubicMeters, PetacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Petaliter).Petaliters, PetalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.PicocubicFoot).PicocubicFeet, PicocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.PicocubicMeter).PicocubicMeters, PicocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Picoliter).Picoliters, PicolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.QutracubicFoot).QutracubicFeet, QutracubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.QutracubicMeter).QutracubicMeters, QutracubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Qutraliter).Qutraliters, QutralitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.TeracubicFoot).TeracubicFeet, TeracubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.TeracubicMeter).TeracubicMeters, TeracubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Teraliter).Teraliters, TeralitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.UkTablespoon).UkTablespoons, UkTablespoonsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.UsBeerBarrel).UsBeerBarrels, UsBeerBarrelsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.UsCustomaryCup).UsCustomaryCups, UsCustomaryCupsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.UsGallon).UsGallons, UsGallonsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.UsLegalCup).UsLegalCups, UsLegalCupsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.UsOunce).UsOunces, UsOuncesTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.UsPint).UsPints, UsPintsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.UsQuart).UsQuarts, UsQuartsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.UsTablespoon).UsTablespoons, UsTablespoonsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.UsTeaspoon).UsTeaspoons, UsTeaspoonsTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.VettacubicFoot).VettacubicFeet, VettacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.VettacubicMeter).VettacubicMeters, VettacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Vettaliter).Vettaliters, VettalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.YoctocubicFoot).YoctocubicFeet, YoctocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.YoctocubicMeter).YoctocubicMeters, YoctocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Yoctoliter).Yoctoliters, YoctolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.YottacubicFoot).YottacubicFeet, YottacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.YottacubicMeter).YottacubicMeters, YottacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Yottaliter).Yottaliters, YottalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.ZeptocubicFoot).ZeptocubicFeet, ZeptocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.ZeptocubicMeter).ZeptocubicMeters, ZeptocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Zeptoliter).Zeptoliters, ZeptolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.ZettacubicFoot).ZettacubicFeet, ZettacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.ZettacubicMeter).ZettacubicMeters, ZettacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.From(1, VolumeUnit.Zettaliter).Zettaliters, ZettalitersTolerance);
        }

        [Fact]
        public void FromCubicMeters_WithInfinityValue_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => Volume.FromCubicMeters(double.PositiveInfinity));
            Assert.Throws<ArgumentException>(() => Volume.FromCubicMeters(double.NegativeInfinity));
        }

        [Fact]
        public void FromCubicMeters_WithNanValue_ThrowsArgumentException()
        {
            Assert.Throws<ArgumentException>(() => Volume.FromCubicMeters(double.NaN));
        }

        [Fact]
        public void As()
        {
            var cubicmeter = Volume.FromCubicMeters(1);
            AssertEx.EqualTolerance(AcreFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.AcreFoot), AcreFeetTolerance);
            AssertEx.EqualTolerance(AttocubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.AttocubicFoot), AttocubicFeetTolerance);
            AssertEx.EqualTolerance(AttocubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.AttocubicMeter), AttocubicMetersTolerance);
            AssertEx.EqualTolerance(AttolitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Attoliter), AttolitersTolerance);
            AssertEx.EqualTolerance(AuTablespoonsInOneCubicMeter, cubicmeter.As(VolumeUnit.AuTablespoon), AuTablespoonsTolerance);
            AssertEx.EqualTolerance(CenticubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.CenticubicFoot), CenticubicFeetTolerance);
            AssertEx.EqualTolerance(CenticubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.CenticubicMeter), CenticubicMetersTolerance);
            AssertEx.EqualTolerance(CentilitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Centiliter), CentilitersTolerance);
            AssertEx.EqualTolerance(CubicCentimetersInOneCubicMeter, cubicmeter.As(VolumeUnit.CubicCentimeter), CubicCentimetersTolerance);
            AssertEx.EqualTolerance(CubicDecimetersInOneCubicMeter, cubicmeter.As(VolumeUnit.CubicDecimeter), CubicDecimetersTolerance);
            AssertEx.EqualTolerance(CubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.CubicFoot), CubicFeetTolerance);
            AssertEx.EqualTolerance(CubicHectometersInOneCubicMeter, cubicmeter.As(VolumeUnit.CubicHectometer), CubicHectometersTolerance);
            AssertEx.EqualTolerance(CubicInchesInOneCubicMeter, cubicmeter.As(VolumeUnit.CubicInch), CubicInchesTolerance);
            AssertEx.EqualTolerance(CubicKilometersInOneCubicMeter, cubicmeter.As(VolumeUnit.CubicKilometer), CubicKilometersTolerance);
            AssertEx.EqualTolerance(CubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.CubicMeter), CubicMetersTolerance);
            AssertEx.EqualTolerance(CubicMicrometersInOneCubicMeter, cubicmeter.As(VolumeUnit.CubicMicrometer), CubicMicrometersTolerance);
            AssertEx.EqualTolerance(CubicMilesInOneCubicMeter, cubicmeter.As(VolumeUnit.CubicMile), CubicMilesTolerance);
            AssertEx.EqualTolerance(CubicMillimetersInOneCubicMeter, cubicmeter.As(VolumeUnit.CubicMillimeter), CubicMillimetersTolerance);
            AssertEx.EqualTolerance(CubicYardsInOneCubicMeter, cubicmeter.As(VolumeUnit.CubicYard), CubicYardsTolerance);
            AssertEx.EqualTolerance(DecacubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.DecacubicFoot), DecacubicFeetTolerance);
            AssertEx.EqualTolerance(DecacubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.DecacubicMeter), DecacubicMetersTolerance);
            AssertEx.EqualTolerance(DecalitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Decaliter), DecalitersTolerance);
            AssertEx.EqualTolerance(DecicubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.DecicubicFoot), DecicubicFeetTolerance);
            AssertEx.EqualTolerance(DecicubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.DecicubicMeter), DecicubicMetersTolerance);
            AssertEx.EqualTolerance(DecilitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Deciliter), DecilitersTolerance);
            AssertEx.EqualTolerance(ExacubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.ExacubicFoot), ExacubicFeetTolerance);
            AssertEx.EqualTolerance(ExacubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.ExacubicMeter), ExacubicMetersTolerance);
            AssertEx.EqualTolerance(ExalitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Exaliter), ExalitersTolerance);
            AssertEx.EqualTolerance(FemtocubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.FemtocubicFoot), FemtocubicFeetTolerance);
            AssertEx.EqualTolerance(FemtocubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.FemtocubicMeter), FemtocubicMetersTolerance);
            AssertEx.EqualTolerance(FemtolitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Femtoliter), FemtolitersTolerance);
            AssertEx.EqualTolerance(GigacubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.GigacubicFoot), GigacubicFeetTolerance);
            AssertEx.EqualTolerance(GigacubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.GigacubicMeter), GigacubicMetersTolerance);
            AssertEx.EqualTolerance(GigalitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Gigaliter), GigalitersTolerance);
            AssertEx.EqualTolerance(HectocubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.HectocubicFoot), HectocubicFeetTolerance);
            AssertEx.EqualTolerance(HectocubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.HectocubicMeter), HectocubicMetersTolerance);
            AssertEx.EqualTolerance(HectolitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Hectoliter), HectolitersTolerance);
            AssertEx.EqualTolerance(ImperialBeerBarrelsInOneCubicMeter, cubicmeter.As(VolumeUnit.ImperialBeerBarrel), ImperialBeerBarrelsTolerance);
            AssertEx.EqualTolerance(ImperialGallonsInOneCubicMeter, cubicmeter.As(VolumeUnit.ImperialGallon), ImperialGallonsTolerance);
            AssertEx.EqualTolerance(ImperialOuncesInOneCubicMeter, cubicmeter.As(VolumeUnit.ImperialOunce), ImperialOuncesTolerance);
            AssertEx.EqualTolerance(ImperialPintsInOneCubicMeter, cubicmeter.As(VolumeUnit.ImperialPint), ImperialPintsTolerance);
            AssertEx.EqualTolerance(KilocubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.KilocubicFoot), KilocubicFeetTolerance);
            AssertEx.EqualTolerance(KilocubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.KilocubicMeter), KilocubicMetersTolerance);
            AssertEx.EqualTolerance(KiloimperialGallonsInOneCubicMeter, cubicmeter.As(VolumeUnit.KiloimperialGallon), KiloimperialGallonsTolerance);
            AssertEx.EqualTolerance(KilolitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Kiloliter), KilolitersTolerance);
            AssertEx.EqualTolerance(KilousGallonsInOneCubicMeter, cubicmeter.As(VolumeUnit.KilousGallon), KilousGallonsTolerance);
            AssertEx.EqualTolerance(LitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Liter), LitersTolerance);
            AssertEx.EqualTolerance(MegacubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.MegacubicFoot), MegacubicFeetTolerance);
            AssertEx.EqualTolerance(MegacubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.MegacubicMeter), MegacubicMetersTolerance);
            AssertEx.EqualTolerance(MegaimperialGallonsInOneCubicMeter, cubicmeter.As(VolumeUnit.MegaimperialGallon), MegaimperialGallonsTolerance);
            AssertEx.EqualTolerance(MegalitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Megaliter), MegalitersTolerance);
            AssertEx.EqualTolerance(MegausGallonsInOneCubicMeter, cubicmeter.As(VolumeUnit.MegausGallon), MegausGallonsTolerance);
            AssertEx.EqualTolerance(MetricCupsInOneCubicMeter, cubicmeter.As(VolumeUnit.MetricCup), MetricCupsTolerance);
            AssertEx.EqualTolerance(MetricTeaspoonsInOneCubicMeter, cubicmeter.As(VolumeUnit.MetricTeaspoon), MetricTeaspoonsTolerance);
            AssertEx.EqualTolerance(MicrocubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.MicrocubicFoot), MicrocubicFeetTolerance);
            AssertEx.EqualTolerance(MicrocubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.MicrocubicMeter), MicrocubicMetersTolerance);
            AssertEx.EqualTolerance(MicrolitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Microliter), MicrolitersTolerance);
            AssertEx.EqualTolerance(MillicubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.MillicubicFoot), MillicubicFeetTolerance);
            AssertEx.EqualTolerance(MillicubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.MillicubicMeter), MillicubicMetersTolerance);
            AssertEx.EqualTolerance(MillilitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Milliliter), MillilitersTolerance);
            AssertEx.EqualTolerance(NanocubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.NanocubicFoot), NanocubicFeetTolerance);
            AssertEx.EqualTolerance(NanocubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.NanocubicMeter), NanocubicMetersTolerance);
            AssertEx.EqualTolerance(NanolitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Nanoliter), NanolitersTolerance);
            AssertEx.EqualTolerance(OilBarrelsInOneCubicMeter, cubicmeter.As(VolumeUnit.OilBarrel), OilBarrelsTolerance);
            AssertEx.EqualTolerance(PetacubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.PetacubicFoot), PetacubicFeetTolerance);
            AssertEx.EqualTolerance(PetacubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.PetacubicMeter), PetacubicMetersTolerance);
            AssertEx.EqualTolerance(PetalitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Petaliter), PetalitersTolerance);
            AssertEx.EqualTolerance(PicocubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.PicocubicFoot), PicocubicFeetTolerance);
            AssertEx.EqualTolerance(PicocubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.PicocubicMeter), PicocubicMetersTolerance);
            AssertEx.EqualTolerance(PicolitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Picoliter), PicolitersTolerance);
            AssertEx.EqualTolerance(QutracubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.QutracubicFoot), QutracubicFeetTolerance);
            AssertEx.EqualTolerance(QutracubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.QutracubicMeter), QutracubicMetersTolerance);
            AssertEx.EqualTolerance(QutralitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Qutraliter), QutralitersTolerance);
            AssertEx.EqualTolerance(TeracubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.TeracubicFoot), TeracubicFeetTolerance);
            AssertEx.EqualTolerance(TeracubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.TeracubicMeter), TeracubicMetersTolerance);
            AssertEx.EqualTolerance(TeralitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Teraliter), TeralitersTolerance);
            AssertEx.EqualTolerance(UkTablespoonsInOneCubicMeter, cubicmeter.As(VolumeUnit.UkTablespoon), UkTablespoonsTolerance);
            AssertEx.EqualTolerance(UsBeerBarrelsInOneCubicMeter, cubicmeter.As(VolumeUnit.UsBeerBarrel), UsBeerBarrelsTolerance);
            AssertEx.EqualTolerance(UsCustomaryCupsInOneCubicMeter, cubicmeter.As(VolumeUnit.UsCustomaryCup), UsCustomaryCupsTolerance);
            AssertEx.EqualTolerance(UsGallonsInOneCubicMeter, cubicmeter.As(VolumeUnit.UsGallon), UsGallonsTolerance);
            AssertEx.EqualTolerance(UsLegalCupsInOneCubicMeter, cubicmeter.As(VolumeUnit.UsLegalCup), UsLegalCupsTolerance);
            AssertEx.EqualTolerance(UsOuncesInOneCubicMeter, cubicmeter.As(VolumeUnit.UsOunce), UsOuncesTolerance);
            AssertEx.EqualTolerance(UsPintsInOneCubicMeter, cubicmeter.As(VolumeUnit.UsPint), UsPintsTolerance);
            AssertEx.EqualTolerance(UsQuartsInOneCubicMeter, cubicmeter.As(VolumeUnit.UsQuart), UsQuartsTolerance);
            AssertEx.EqualTolerance(UsTablespoonsInOneCubicMeter, cubicmeter.As(VolumeUnit.UsTablespoon), UsTablespoonsTolerance);
            AssertEx.EqualTolerance(UsTeaspoonsInOneCubicMeter, cubicmeter.As(VolumeUnit.UsTeaspoon), UsTeaspoonsTolerance);
            AssertEx.EqualTolerance(VettacubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.VettacubicFoot), VettacubicFeetTolerance);
            AssertEx.EqualTolerance(VettacubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.VettacubicMeter), VettacubicMetersTolerance);
            AssertEx.EqualTolerance(VettalitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Vettaliter), VettalitersTolerance);
            AssertEx.EqualTolerance(YoctocubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.YoctocubicFoot), YoctocubicFeetTolerance);
            AssertEx.EqualTolerance(YoctocubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.YoctocubicMeter), YoctocubicMetersTolerance);
            AssertEx.EqualTolerance(YoctolitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Yoctoliter), YoctolitersTolerance);
            AssertEx.EqualTolerance(YottacubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.YottacubicFoot), YottacubicFeetTolerance);
            AssertEx.EqualTolerance(YottacubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.YottacubicMeter), YottacubicMetersTolerance);
            AssertEx.EqualTolerance(YottalitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Yottaliter), YottalitersTolerance);
            AssertEx.EqualTolerance(ZeptocubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.ZeptocubicFoot), ZeptocubicFeetTolerance);
            AssertEx.EqualTolerance(ZeptocubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.ZeptocubicMeter), ZeptocubicMetersTolerance);
            AssertEx.EqualTolerance(ZeptolitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Zeptoliter), ZeptolitersTolerance);
            AssertEx.EqualTolerance(ZettacubicFeetInOneCubicMeter, cubicmeter.As(VolumeUnit.ZettacubicFoot), ZettacubicFeetTolerance);
            AssertEx.EqualTolerance(ZettacubicMetersInOneCubicMeter, cubicmeter.As(VolumeUnit.ZettacubicMeter), ZettacubicMetersTolerance);
            AssertEx.EqualTolerance(ZettalitersInOneCubicMeter, cubicmeter.As(VolumeUnit.Zettaliter), ZettalitersTolerance);
        }

        [Fact]
        public void ToUnit()
        {
            var cubicmeter = Volume.FromCubicMeters(1);

            var acrefootQuantity = cubicmeter.ToUnit(VolumeUnit.AcreFoot);
            AssertEx.EqualTolerance(AcreFeetInOneCubicMeter, (double)acrefootQuantity.Value, AcreFeetTolerance);
            Assert.Equal(VolumeUnit.AcreFoot, acrefootQuantity.Unit);

            var attocubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.AttocubicFoot);
            AssertEx.EqualTolerance(AttocubicFeetInOneCubicMeter, (double)attocubicfootQuantity.Value, AttocubicFeetTolerance);
            Assert.Equal(VolumeUnit.AttocubicFoot, attocubicfootQuantity.Unit);

            var attocubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.AttocubicMeter);
            AssertEx.EqualTolerance(AttocubicMetersInOneCubicMeter, (double)attocubicmeterQuantity.Value, AttocubicMetersTolerance);
            Assert.Equal(VolumeUnit.AttocubicMeter, attocubicmeterQuantity.Unit);

            var attoliterQuantity = cubicmeter.ToUnit(VolumeUnit.Attoliter);
            AssertEx.EqualTolerance(AttolitersInOneCubicMeter, (double)attoliterQuantity.Value, AttolitersTolerance);
            Assert.Equal(VolumeUnit.Attoliter, attoliterQuantity.Unit);

            var autablespoonQuantity = cubicmeter.ToUnit(VolumeUnit.AuTablespoon);
            AssertEx.EqualTolerance(AuTablespoonsInOneCubicMeter, (double)autablespoonQuantity.Value, AuTablespoonsTolerance);
            Assert.Equal(VolumeUnit.AuTablespoon, autablespoonQuantity.Unit);

            var centicubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.CenticubicFoot);
            AssertEx.EqualTolerance(CenticubicFeetInOneCubicMeter, (double)centicubicfootQuantity.Value, CenticubicFeetTolerance);
            Assert.Equal(VolumeUnit.CenticubicFoot, centicubicfootQuantity.Unit);

            var centicubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.CenticubicMeter);
            AssertEx.EqualTolerance(CenticubicMetersInOneCubicMeter, (double)centicubicmeterQuantity.Value, CenticubicMetersTolerance);
            Assert.Equal(VolumeUnit.CenticubicMeter, centicubicmeterQuantity.Unit);

            var centiliterQuantity = cubicmeter.ToUnit(VolumeUnit.Centiliter);
            AssertEx.EqualTolerance(CentilitersInOneCubicMeter, (double)centiliterQuantity.Value, CentilitersTolerance);
            Assert.Equal(VolumeUnit.Centiliter, centiliterQuantity.Unit);

            var cubiccentimeterQuantity = cubicmeter.ToUnit(VolumeUnit.CubicCentimeter);
            AssertEx.EqualTolerance(CubicCentimetersInOneCubicMeter, (double)cubiccentimeterQuantity.Value, CubicCentimetersTolerance);
            Assert.Equal(VolumeUnit.CubicCentimeter, cubiccentimeterQuantity.Unit);

            var cubicdecimeterQuantity = cubicmeter.ToUnit(VolumeUnit.CubicDecimeter);
            AssertEx.EqualTolerance(CubicDecimetersInOneCubicMeter, (double)cubicdecimeterQuantity.Value, CubicDecimetersTolerance);
            Assert.Equal(VolumeUnit.CubicDecimeter, cubicdecimeterQuantity.Unit);

            var cubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.CubicFoot);
            AssertEx.EqualTolerance(CubicFeetInOneCubicMeter, (double)cubicfootQuantity.Value, CubicFeetTolerance);
            Assert.Equal(VolumeUnit.CubicFoot, cubicfootQuantity.Unit);

            var cubichectometerQuantity = cubicmeter.ToUnit(VolumeUnit.CubicHectometer);
            AssertEx.EqualTolerance(CubicHectometersInOneCubicMeter, (double)cubichectometerQuantity.Value, CubicHectometersTolerance);
            Assert.Equal(VolumeUnit.CubicHectometer, cubichectometerQuantity.Unit);

            var cubicinchQuantity = cubicmeter.ToUnit(VolumeUnit.CubicInch);
            AssertEx.EqualTolerance(CubicInchesInOneCubicMeter, (double)cubicinchQuantity.Value, CubicInchesTolerance);
            Assert.Equal(VolumeUnit.CubicInch, cubicinchQuantity.Unit);

            var cubickilometerQuantity = cubicmeter.ToUnit(VolumeUnit.CubicKilometer);
            AssertEx.EqualTolerance(CubicKilometersInOneCubicMeter, (double)cubickilometerQuantity.Value, CubicKilometersTolerance);
            Assert.Equal(VolumeUnit.CubicKilometer, cubickilometerQuantity.Unit);

            var cubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.CubicMeter);
            AssertEx.EqualTolerance(CubicMetersInOneCubicMeter, (double)cubicmeterQuantity.Value, CubicMetersTolerance);
            Assert.Equal(VolumeUnit.CubicMeter, cubicmeterQuantity.Unit);

            var cubicmicrometerQuantity = cubicmeter.ToUnit(VolumeUnit.CubicMicrometer);
            AssertEx.EqualTolerance(CubicMicrometersInOneCubicMeter, (double)cubicmicrometerQuantity.Value, CubicMicrometersTolerance);
            Assert.Equal(VolumeUnit.CubicMicrometer, cubicmicrometerQuantity.Unit);

            var cubicmileQuantity = cubicmeter.ToUnit(VolumeUnit.CubicMile);
            AssertEx.EqualTolerance(CubicMilesInOneCubicMeter, (double)cubicmileQuantity.Value, CubicMilesTolerance);
            Assert.Equal(VolumeUnit.CubicMile, cubicmileQuantity.Unit);

            var cubicmillimeterQuantity = cubicmeter.ToUnit(VolumeUnit.CubicMillimeter);
            AssertEx.EqualTolerance(CubicMillimetersInOneCubicMeter, (double)cubicmillimeterQuantity.Value, CubicMillimetersTolerance);
            Assert.Equal(VolumeUnit.CubicMillimeter, cubicmillimeterQuantity.Unit);

            var cubicyardQuantity = cubicmeter.ToUnit(VolumeUnit.CubicYard);
            AssertEx.EqualTolerance(CubicYardsInOneCubicMeter, (double)cubicyardQuantity.Value, CubicYardsTolerance);
            Assert.Equal(VolumeUnit.CubicYard, cubicyardQuantity.Unit);

            var decacubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.DecacubicFoot);
            AssertEx.EqualTolerance(DecacubicFeetInOneCubicMeter, (double)decacubicfootQuantity.Value, DecacubicFeetTolerance);
            Assert.Equal(VolumeUnit.DecacubicFoot, decacubicfootQuantity.Unit);

            var decacubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.DecacubicMeter);
            AssertEx.EqualTolerance(DecacubicMetersInOneCubicMeter, (double)decacubicmeterQuantity.Value, DecacubicMetersTolerance);
            Assert.Equal(VolumeUnit.DecacubicMeter, decacubicmeterQuantity.Unit);

            var decaliterQuantity = cubicmeter.ToUnit(VolumeUnit.Decaliter);
            AssertEx.EqualTolerance(DecalitersInOneCubicMeter, (double)decaliterQuantity.Value, DecalitersTolerance);
            Assert.Equal(VolumeUnit.Decaliter, decaliterQuantity.Unit);

            var decicubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.DecicubicFoot);
            AssertEx.EqualTolerance(DecicubicFeetInOneCubicMeter, (double)decicubicfootQuantity.Value, DecicubicFeetTolerance);
            Assert.Equal(VolumeUnit.DecicubicFoot, decicubicfootQuantity.Unit);

            var decicubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.DecicubicMeter);
            AssertEx.EqualTolerance(DecicubicMetersInOneCubicMeter, (double)decicubicmeterQuantity.Value, DecicubicMetersTolerance);
            Assert.Equal(VolumeUnit.DecicubicMeter, decicubicmeterQuantity.Unit);

            var deciliterQuantity = cubicmeter.ToUnit(VolumeUnit.Deciliter);
            AssertEx.EqualTolerance(DecilitersInOneCubicMeter, (double)deciliterQuantity.Value, DecilitersTolerance);
            Assert.Equal(VolumeUnit.Deciliter, deciliterQuantity.Unit);

            var exacubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.ExacubicFoot);
            AssertEx.EqualTolerance(ExacubicFeetInOneCubicMeter, (double)exacubicfootQuantity.Value, ExacubicFeetTolerance);
            Assert.Equal(VolumeUnit.ExacubicFoot, exacubicfootQuantity.Unit);

            var exacubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.ExacubicMeter);
            AssertEx.EqualTolerance(ExacubicMetersInOneCubicMeter, (double)exacubicmeterQuantity.Value, ExacubicMetersTolerance);
            Assert.Equal(VolumeUnit.ExacubicMeter, exacubicmeterQuantity.Unit);

            var exaliterQuantity = cubicmeter.ToUnit(VolumeUnit.Exaliter);
            AssertEx.EqualTolerance(ExalitersInOneCubicMeter, (double)exaliterQuantity.Value, ExalitersTolerance);
            Assert.Equal(VolumeUnit.Exaliter, exaliterQuantity.Unit);

            var femtocubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.FemtocubicFoot);
            AssertEx.EqualTolerance(FemtocubicFeetInOneCubicMeter, (double)femtocubicfootQuantity.Value, FemtocubicFeetTolerance);
            Assert.Equal(VolumeUnit.FemtocubicFoot, femtocubicfootQuantity.Unit);

            var femtocubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.FemtocubicMeter);
            AssertEx.EqualTolerance(FemtocubicMetersInOneCubicMeter, (double)femtocubicmeterQuantity.Value, FemtocubicMetersTolerance);
            Assert.Equal(VolumeUnit.FemtocubicMeter, femtocubicmeterQuantity.Unit);

            var femtoliterQuantity = cubicmeter.ToUnit(VolumeUnit.Femtoliter);
            AssertEx.EqualTolerance(FemtolitersInOneCubicMeter, (double)femtoliterQuantity.Value, FemtolitersTolerance);
            Assert.Equal(VolumeUnit.Femtoliter, femtoliterQuantity.Unit);

            var gigacubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.GigacubicFoot);
            AssertEx.EqualTolerance(GigacubicFeetInOneCubicMeter, (double)gigacubicfootQuantity.Value, GigacubicFeetTolerance);
            Assert.Equal(VolumeUnit.GigacubicFoot, gigacubicfootQuantity.Unit);

            var gigacubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.GigacubicMeter);
            AssertEx.EqualTolerance(GigacubicMetersInOneCubicMeter, (double)gigacubicmeterQuantity.Value, GigacubicMetersTolerance);
            Assert.Equal(VolumeUnit.GigacubicMeter, gigacubicmeterQuantity.Unit);

            var gigaliterQuantity = cubicmeter.ToUnit(VolumeUnit.Gigaliter);
            AssertEx.EqualTolerance(GigalitersInOneCubicMeter, (double)gigaliterQuantity.Value, GigalitersTolerance);
            Assert.Equal(VolumeUnit.Gigaliter, gigaliterQuantity.Unit);

            var hectocubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.HectocubicFoot);
            AssertEx.EqualTolerance(HectocubicFeetInOneCubicMeter, (double)hectocubicfootQuantity.Value, HectocubicFeetTolerance);
            Assert.Equal(VolumeUnit.HectocubicFoot, hectocubicfootQuantity.Unit);

            var hectocubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.HectocubicMeter);
            AssertEx.EqualTolerance(HectocubicMetersInOneCubicMeter, (double)hectocubicmeterQuantity.Value, HectocubicMetersTolerance);
            Assert.Equal(VolumeUnit.HectocubicMeter, hectocubicmeterQuantity.Unit);

            var hectoliterQuantity = cubicmeter.ToUnit(VolumeUnit.Hectoliter);
            AssertEx.EqualTolerance(HectolitersInOneCubicMeter, (double)hectoliterQuantity.Value, HectolitersTolerance);
            Assert.Equal(VolumeUnit.Hectoliter, hectoliterQuantity.Unit);

            var imperialbeerbarrelQuantity = cubicmeter.ToUnit(VolumeUnit.ImperialBeerBarrel);
            AssertEx.EqualTolerance(ImperialBeerBarrelsInOneCubicMeter, (double)imperialbeerbarrelQuantity.Value, ImperialBeerBarrelsTolerance);
            Assert.Equal(VolumeUnit.ImperialBeerBarrel, imperialbeerbarrelQuantity.Unit);

            var imperialgallonQuantity = cubicmeter.ToUnit(VolumeUnit.ImperialGallon);
            AssertEx.EqualTolerance(ImperialGallonsInOneCubicMeter, (double)imperialgallonQuantity.Value, ImperialGallonsTolerance);
            Assert.Equal(VolumeUnit.ImperialGallon, imperialgallonQuantity.Unit);

            var imperialounceQuantity = cubicmeter.ToUnit(VolumeUnit.ImperialOunce);
            AssertEx.EqualTolerance(ImperialOuncesInOneCubicMeter, (double)imperialounceQuantity.Value, ImperialOuncesTolerance);
            Assert.Equal(VolumeUnit.ImperialOunce, imperialounceQuantity.Unit);

            var imperialpintQuantity = cubicmeter.ToUnit(VolumeUnit.ImperialPint);
            AssertEx.EqualTolerance(ImperialPintsInOneCubicMeter, (double)imperialpintQuantity.Value, ImperialPintsTolerance);
            Assert.Equal(VolumeUnit.ImperialPint, imperialpintQuantity.Unit);

            var kilocubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.KilocubicFoot);
            AssertEx.EqualTolerance(KilocubicFeetInOneCubicMeter, (double)kilocubicfootQuantity.Value, KilocubicFeetTolerance);
            Assert.Equal(VolumeUnit.KilocubicFoot, kilocubicfootQuantity.Unit);

            var kilocubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.KilocubicMeter);
            AssertEx.EqualTolerance(KilocubicMetersInOneCubicMeter, (double)kilocubicmeterQuantity.Value, KilocubicMetersTolerance);
            Assert.Equal(VolumeUnit.KilocubicMeter, kilocubicmeterQuantity.Unit);

            var kiloimperialgallonQuantity = cubicmeter.ToUnit(VolumeUnit.KiloimperialGallon);
            AssertEx.EqualTolerance(KiloimperialGallonsInOneCubicMeter, (double)kiloimperialgallonQuantity.Value, KiloimperialGallonsTolerance);
            Assert.Equal(VolumeUnit.KiloimperialGallon, kiloimperialgallonQuantity.Unit);

            var kiloliterQuantity = cubicmeter.ToUnit(VolumeUnit.Kiloliter);
            AssertEx.EqualTolerance(KilolitersInOneCubicMeter, (double)kiloliterQuantity.Value, KilolitersTolerance);
            Assert.Equal(VolumeUnit.Kiloliter, kiloliterQuantity.Unit);

            var kilousgallonQuantity = cubicmeter.ToUnit(VolumeUnit.KilousGallon);
            AssertEx.EqualTolerance(KilousGallonsInOneCubicMeter, (double)kilousgallonQuantity.Value, KilousGallonsTolerance);
            Assert.Equal(VolumeUnit.KilousGallon, kilousgallonQuantity.Unit);

            var literQuantity = cubicmeter.ToUnit(VolumeUnit.Liter);
            AssertEx.EqualTolerance(LitersInOneCubicMeter, (double)literQuantity.Value, LitersTolerance);
            Assert.Equal(VolumeUnit.Liter, literQuantity.Unit);

            var megacubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.MegacubicFoot);
            AssertEx.EqualTolerance(MegacubicFeetInOneCubicMeter, (double)megacubicfootQuantity.Value, MegacubicFeetTolerance);
            Assert.Equal(VolumeUnit.MegacubicFoot, megacubicfootQuantity.Unit);

            var megacubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.MegacubicMeter);
            AssertEx.EqualTolerance(MegacubicMetersInOneCubicMeter, (double)megacubicmeterQuantity.Value, MegacubicMetersTolerance);
            Assert.Equal(VolumeUnit.MegacubicMeter, megacubicmeterQuantity.Unit);

            var megaimperialgallonQuantity = cubicmeter.ToUnit(VolumeUnit.MegaimperialGallon);
            AssertEx.EqualTolerance(MegaimperialGallonsInOneCubicMeter, (double)megaimperialgallonQuantity.Value, MegaimperialGallonsTolerance);
            Assert.Equal(VolumeUnit.MegaimperialGallon, megaimperialgallonQuantity.Unit);

            var megaliterQuantity = cubicmeter.ToUnit(VolumeUnit.Megaliter);
            AssertEx.EqualTolerance(MegalitersInOneCubicMeter, (double)megaliterQuantity.Value, MegalitersTolerance);
            Assert.Equal(VolumeUnit.Megaliter, megaliterQuantity.Unit);

            var megausgallonQuantity = cubicmeter.ToUnit(VolumeUnit.MegausGallon);
            AssertEx.EqualTolerance(MegausGallonsInOneCubicMeter, (double)megausgallonQuantity.Value, MegausGallonsTolerance);
            Assert.Equal(VolumeUnit.MegausGallon, megausgallonQuantity.Unit);

            var metriccupQuantity = cubicmeter.ToUnit(VolumeUnit.MetricCup);
            AssertEx.EqualTolerance(MetricCupsInOneCubicMeter, (double)metriccupQuantity.Value, MetricCupsTolerance);
            Assert.Equal(VolumeUnit.MetricCup, metriccupQuantity.Unit);

            var metricteaspoonQuantity = cubicmeter.ToUnit(VolumeUnit.MetricTeaspoon);
            AssertEx.EqualTolerance(MetricTeaspoonsInOneCubicMeter, (double)metricteaspoonQuantity.Value, MetricTeaspoonsTolerance);
            Assert.Equal(VolumeUnit.MetricTeaspoon, metricteaspoonQuantity.Unit);

            var microcubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.MicrocubicFoot);
            AssertEx.EqualTolerance(MicrocubicFeetInOneCubicMeter, (double)microcubicfootQuantity.Value, MicrocubicFeetTolerance);
            Assert.Equal(VolumeUnit.MicrocubicFoot, microcubicfootQuantity.Unit);

            var microcubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.MicrocubicMeter);
            AssertEx.EqualTolerance(MicrocubicMetersInOneCubicMeter, (double)microcubicmeterQuantity.Value, MicrocubicMetersTolerance);
            Assert.Equal(VolumeUnit.MicrocubicMeter, microcubicmeterQuantity.Unit);

            var microliterQuantity = cubicmeter.ToUnit(VolumeUnit.Microliter);
            AssertEx.EqualTolerance(MicrolitersInOneCubicMeter, (double)microliterQuantity.Value, MicrolitersTolerance);
            Assert.Equal(VolumeUnit.Microliter, microliterQuantity.Unit);

            var millicubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.MillicubicFoot);
            AssertEx.EqualTolerance(MillicubicFeetInOneCubicMeter, (double)millicubicfootQuantity.Value, MillicubicFeetTolerance);
            Assert.Equal(VolumeUnit.MillicubicFoot, millicubicfootQuantity.Unit);

            var millicubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.MillicubicMeter);
            AssertEx.EqualTolerance(MillicubicMetersInOneCubicMeter, (double)millicubicmeterQuantity.Value, MillicubicMetersTolerance);
            Assert.Equal(VolumeUnit.MillicubicMeter, millicubicmeterQuantity.Unit);

            var milliliterQuantity = cubicmeter.ToUnit(VolumeUnit.Milliliter);
            AssertEx.EqualTolerance(MillilitersInOneCubicMeter, (double)milliliterQuantity.Value, MillilitersTolerance);
            Assert.Equal(VolumeUnit.Milliliter, milliliterQuantity.Unit);

            var nanocubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.NanocubicFoot);
            AssertEx.EqualTolerance(NanocubicFeetInOneCubicMeter, (double)nanocubicfootQuantity.Value, NanocubicFeetTolerance);
            Assert.Equal(VolumeUnit.NanocubicFoot, nanocubicfootQuantity.Unit);

            var nanocubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.NanocubicMeter);
            AssertEx.EqualTolerance(NanocubicMetersInOneCubicMeter, (double)nanocubicmeterQuantity.Value, NanocubicMetersTolerance);
            Assert.Equal(VolumeUnit.NanocubicMeter, nanocubicmeterQuantity.Unit);

            var nanoliterQuantity = cubicmeter.ToUnit(VolumeUnit.Nanoliter);
            AssertEx.EqualTolerance(NanolitersInOneCubicMeter, (double)nanoliterQuantity.Value, NanolitersTolerance);
            Assert.Equal(VolumeUnit.Nanoliter, nanoliterQuantity.Unit);

            var oilbarrelQuantity = cubicmeter.ToUnit(VolumeUnit.OilBarrel);
            AssertEx.EqualTolerance(OilBarrelsInOneCubicMeter, (double)oilbarrelQuantity.Value, OilBarrelsTolerance);
            Assert.Equal(VolumeUnit.OilBarrel, oilbarrelQuantity.Unit);

            var petacubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.PetacubicFoot);
            AssertEx.EqualTolerance(PetacubicFeetInOneCubicMeter, (double)petacubicfootQuantity.Value, PetacubicFeetTolerance);
            Assert.Equal(VolumeUnit.PetacubicFoot, petacubicfootQuantity.Unit);

            var petacubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.PetacubicMeter);
            AssertEx.EqualTolerance(PetacubicMetersInOneCubicMeter, (double)petacubicmeterQuantity.Value, PetacubicMetersTolerance);
            Assert.Equal(VolumeUnit.PetacubicMeter, petacubicmeterQuantity.Unit);

            var petaliterQuantity = cubicmeter.ToUnit(VolumeUnit.Petaliter);
            AssertEx.EqualTolerance(PetalitersInOneCubicMeter, (double)petaliterQuantity.Value, PetalitersTolerance);
            Assert.Equal(VolumeUnit.Petaliter, petaliterQuantity.Unit);

            var picocubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.PicocubicFoot);
            AssertEx.EqualTolerance(PicocubicFeetInOneCubicMeter, (double)picocubicfootQuantity.Value, PicocubicFeetTolerance);
            Assert.Equal(VolumeUnit.PicocubicFoot, picocubicfootQuantity.Unit);

            var picocubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.PicocubicMeter);
            AssertEx.EqualTolerance(PicocubicMetersInOneCubicMeter, (double)picocubicmeterQuantity.Value, PicocubicMetersTolerance);
            Assert.Equal(VolumeUnit.PicocubicMeter, picocubicmeterQuantity.Unit);

            var picoliterQuantity = cubicmeter.ToUnit(VolumeUnit.Picoliter);
            AssertEx.EqualTolerance(PicolitersInOneCubicMeter, (double)picoliterQuantity.Value, PicolitersTolerance);
            Assert.Equal(VolumeUnit.Picoliter, picoliterQuantity.Unit);

            var qutracubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.QutracubicFoot);
            AssertEx.EqualTolerance(QutracubicFeetInOneCubicMeter, (double)qutracubicfootQuantity.Value, QutracubicFeetTolerance);
            Assert.Equal(VolumeUnit.QutracubicFoot, qutracubicfootQuantity.Unit);

            var qutracubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.QutracubicMeter);
            AssertEx.EqualTolerance(QutracubicMetersInOneCubicMeter, (double)qutracubicmeterQuantity.Value, QutracubicMetersTolerance);
            Assert.Equal(VolumeUnit.QutracubicMeter, qutracubicmeterQuantity.Unit);

            var qutraliterQuantity = cubicmeter.ToUnit(VolumeUnit.Qutraliter);
            AssertEx.EqualTolerance(QutralitersInOneCubicMeter, (double)qutraliterQuantity.Value, QutralitersTolerance);
            Assert.Equal(VolumeUnit.Qutraliter, qutraliterQuantity.Unit);

            var teracubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.TeracubicFoot);
            AssertEx.EqualTolerance(TeracubicFeetInOneCubicMeter, (double)teracubicfootQuantity.Value, TeracubicFeetTolerance);
            Assert.Equal(VolumeUnit.TeracubicFoot, teracubicfootQuantity.Unit);

            var teracubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.TeracubicMeter);
            AssertEx.EqualTolerance(TeracubicMetersInOneCubicMeter, (double)teracubicmeterQuantity.Value, TeracubicMetersTolerance);
            Assert.Equal(VolumeUnit.TeracubicMeter, teracubicmeterQuantity.Unit);

            var teraliterQuantity = cubicmeter.ToUnit(VolumeUnit.Teraliter);
            AssertEx.EqualTolerance(TeralitersInOneCubicMeter, (double)teraliterQuantity.Value, TeralitersTolerance);
            Assert.Equal(VolumeUnit.Teraliter, teraliterQuantity.Unit);

            var uktablespoonQuantity = cubicmeter.ToUnit(VolumeUnit.UkTablespoon);
            AssertEx.EqualTolerance(UkTablespoonsInOneCubicMeter, (double)uktablespoonQuantity.Value, UkTablespoonsTolerance);
            Assert.Equal(VolumeUnit.UkTablespoon, uktablespoonQuantity.Unit);

            var usbeerbarrelQuantity = cubicmeter.ToUnit(VolumeUnit.UsBeerBarrel);
            AssertEx.EqualTolerance(UsBeerBarrelsInOneCubicMeter, (double)usbeerbarrelQuantity.Value, UsBeerBarrelsTolerance);
            Assert.Equal(VolumeUnit.UsBeerBarrel, usbeerbarrelQuantity.Unit);

            var uscustomarycupQuantity = cubicmeter.ToUnit(VolumeUnit.UsCustomaryCup);
            AssertEx.EqualTolerance(UsCustomaryCupsInOneCubicMeter, (double)uscustomarycupQuantity.Value, UsCustomaryCupsTolerance);
            Assert.Equal(VolumeUnit.UsCustomaryCup, uscustomarycupQuantity.Unit);

            var usgallonQuantity = cubicmeter.ToUnit(VolumeUnit.UsGallon);
            AssertEx.EqualTolerance(UsGallonsInOneCubicMeter, (double)usgallonQuantity.Value, UsGallonsTolerance);
            Assert.Equal(VolumeUnit.UsGallon, usgallonQuantity.Unit);

            var uslegalcupQuantity = cubicmeter.ToUnit(VolumeUnit.UsLegalCup);
            AssertEx.EqualTolerance(UsLegalCupsInOneCubicMeter, (double)uslegalcupQuantity.Value, UsLegalCupsTolerance);
            Assert.Equal(VolumeUnit.UsLegalCup, uslegalcupQuantity.Unit);

            var usounceQuantity = cubicmeter.ToUnit(VolumeUnit.UsOunce);
            AssertEx.EqualTolerance(UsOuncesInOneCubicMeter, (double)usounceQuantity.Value, UsOuncesTolerance);
            Assert.Equal(VolumeUnit.UsOunce, usounceQuantity.Unit);

            var uspintQuantity = cubicmeter.ToUnit(VolumeUnit.UsPint);
            AssertEx.EqualTolerance(UsPintsInOneCubicMeter, (double)uspintQuantity.Value, UsPintsTolerance);
            Assert.Equal(VolumeUnit.UsPint, uspintQuantity.Unit);

            var usquartQuantity = cubicmeter.ToUnit(VolumeUnit.UsQuart);
            AssertEx.EqualTolerance(UsQuartsInOneCubicMeter, (double)usquartQuantity.Value, UsQuartsTolerance);
            Assert.Equal(VolumeUnit.UsQuart, usquartQuantity.Unit);

            var ustablespoonQuantity = cubicmeter.ToUnit(VolumeUnit.UsTablespoon);
            AssertEx.EqualTolerance(UsTablespoonsInOneCubicMeter, (double)ustablespoonQuantity.Value, UsTablespoonsTolerance);
            Assert.Equal(VolumeUnit.UsTablespoon, ustablespoonQuantity.Unit);

            var usteaspoonQuantity = cubicmeter.ToUnit(VolumeUnit.UsTeaspoon);
            AssertEx.EqualTolerance(UsTeaspoonsInOneCubicMeter, (double)usteaspoonQuantity.Value, UsTeaspoonsTolerance);
            Assert.Equal(VolumeUnit.UsTeaspoon, usteaspoonQuantity.Unit);

            var vettacubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.VettacubicFoot);
            AssertEx.EqualTolerance(VettacubicFeetInOneCubicMeter, (double)vettacubicfootQuantity.Value, VettacubicFeetTolerance);
            Assert.Equal(VolumeUnit.VettacubicFoot, vettacubicfootQuantity.Unit);

            var vettacubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.VettacubicMeter);
            AssertEx.EqualTolerance(VettacubicMetersInOneCubicMeter, (double)vettacubicmeterQuantity.Value, VettacubicMetersTolerance);
            Assert.Equal(VolumeUnit.VettacubicMeter, vettacubicmeterQuantity.Unit);

            var vettaliterQuantity = cubicmeter.ToUnit(VolumeUnit.Vettaliter);
            AssertEx.EqualTolerance(VettalitersInOneCubicMeter, (double)vettaliterQuantity.Value, VettalitersTolerance);
            Assert.Equal(VolumeUnit.Vettaliter, vettaliterQuantity.Unit);

            var yoctocubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.YoctocubicFoot);
            AssertEx.EqualTolerance(YoctocubicFeetInOneCubicMeter, (double)yoctocubicfootQuantity.Value, YoctocubicFeetTolerance);
            Assert.Equal(VolumeUnit.YoctocubicFoot, yoctocubicfootQuantity.Unit);

            var yoctocubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.YoctocubicMeter);
            AssertEx.EqualTolerance(YoctocubicMetersInOneCubicMeter, (double)yoctocubicmeterQuantity.Value, YoctocubicMetersTolerance);
            Assert.Equal(VolumeUnit.YoctocubicMeter, yoctocubicmeterQuantity.Unit);

            var yoctoliterQuantity = cubicmeter.ToUnit(VolumeUnit.Yoctoliter);
            AssertEx.EqualTolerance(YoctolitersInOneCubicMeter, (double)yoctoliterQuantity.Value, YoctolitersTolerance);
            Assert.Equal(VolumeUnit.Yoctoliter, yoctoliterQuantity.Unit);

            var yottacubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.YottacubicFoot);
            AssertEx.EqualTolerance(YottacubicFeetInOneCubicMeter, (double)yottacubicfootQuantity.Value, YottacubicFeetTolerance);
            Assert.Equal(VolumeUnit.YottacubicFoot, yottacubicfootQuantity.Unit);

            var yottacubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.YottacubicMeter);
            AssertEx.EqualTolerance(YottacubicMetersInOneCubicMeter, (double)yottacubicmeterQuantity.Value, YottacubicMetersTolerance);
            Assert.Equal(VolumeUnit.YottacubicMeter, yottacubicmeterQuantity.Unit);

            var yottaliterQuantity = cubicmeter.ToUnit(VolumeUnit.Yottaliter);
            AssertEx.EqualTolerance(YottalitersInOneCubicMeter, (double)yottaliterQuantity.Value, YottalitersTolerance);
            Assert.Equal(VolumeUnit.Yottaliter, yottaliterQuantity.Unit);

            var zeptocubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.ZeptocubicFoot);
            AssertEx.EqualTolerance(ZeptocubicFeetInOneCubicMeter, (double)zeptocubicfootQuantity.Value, ZeptocubicFeetTolerance);
            Assert.Equal(VolumeUnit.ZeptocubicFoot, zeptocubicfootQuantity.Unit);

            var zeptocubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.ZeptocubicMeter);
            AssertEx.EqualTolerance(ZeptocubicMetersInOneCubicMeter, (double)zeptocubicmeterQuantity.Value, ZeptocubicMetersTolerance);
            Assert.Equal(VolumeUnit.ZeptocubicMeter, zeptocubicmeterQuantity.Unit);

            var zeptoliterQuantity = cubicmeter.ToUnit(VolumeUnit.Zeptoliter);
            AssertEx.EqualTolerance(ZeptolitersInOneCubicMeter, (double)zeptoliterQuantity.Value, ZeptolitersTolerance);
            Assert.Equal(VolumeUnit.Zeptoliter, zeptoliterQuantity.Unit);

            var zettacubicfootQuantity = cubicmeter.ToUnit(VolumeUnit.ZettacubicFoot);
            AssertEx.EqualTolerance(ZettacubicFeetInOneCubicMeter, (double)zettacubicfootQuantity.Value, ZettacubicFeetTolerance);
            Assert.Equal(VolumeUnit.ZettacubicFoot, zettacubicfootQuantity.Unit);

            var zettacubicmeterQuantity = cubicmeter.ToUnit(VolumeUnit.ZettacubicMeter);
            AssertEx.EqualTolerance(ZettacubicMetersInOneCubicMeter, (double)zettacubicmeterQuantity.Value, ZettacubicMetersTolerance);
            Assert.Equal(VolumeUnit.ZettacubicMeter, zettacubicmeterQuantity.Unit);

            var zettaliterQuantity = cubicmeter.ToUnit(VolumeUnit.Zettaliter);
            AssertEx.EqualTolerance(ZettalitersInOneCubicMeter, (double)zettaliterQuantity.Value, ZettalitersTolerance);
            Assert.Equal(VolumeUnit.Zettaliter, zettaliterQuantity.Unit);
        }

        [Fact]
        public void ConversionRoundTrip()
        {
            Volume cubicmeter = Volume.FromCubicMeters(1);
            AssertEx.EqualTolerance(1, Volume.FromAcreFeet(cubicmeter.AcreFeet).CubicMeters, AcreFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromAttocubicFeet(cubicmeter.AttocubicFeet).CubicMeters, AttocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromAttocubicMeters(cubicmeter.AttocubicMeters).CubicMeters, AttocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromAttoliters(cubicmeter.Attoliters).CubicMeters, AttolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromAuTablespoons(cubicmeter.AuTablespoons).CubicMeters, AuTablespoonsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCenticubicFeet(cubicmeter.CenticubicFeet).CubicMeters, CenticubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCenticubicMeters(cubicmeter.CenticubicMeters).CubicMeters, CenticubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCentiliters(cubicmeter.Centiliters).CubicMeters, CentilitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCubicCentimeters(cubicmeter.CubicCentimeters).CubicMeters, CubicCentimetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCubicDecimeters(cubicmeter.CubicDecimeters).CubicMeters, CubicDecimetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCubicFeet(cubicmeter.CubicFeet).CubicMeters, CubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCubicHectometers(cubicmeter.CubicHectometers).CubicMeters, CubicHectometersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCubicInches(cubicmeter.CubicInches).CubicMeters, CubicInchesTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCubicKilometers(cubicmeter.CubicKilometers).CubicMeters, CubicKilometersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCubicMeters(cubicmeter.CubicMeters).CubicMeters, CubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCubicMicrometers(cubicmeter.CubicMicrometers).CubicMeters, CubicMicrometersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCubicMiles(cubicmeter.CubicMiles).CubicMeters, CubicMilesTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCubicMillimeters(cubicmeter.CubicMillimeters).CubicMeters, CubicMillimetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromCubicYards(cubicmeter.CubicYards).CubicMeters, CubicYardsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromDecacubicFeet(cubicmeter.DecacubicFeet).CubicMeters, DecacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromDecacubicMeters(cubicmeter.DecacubicMeters).CubicMeters, DecacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromDecaliters(cubicmeter.Decaliters).CubicMeters, DecalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromDecicubicFeet(cubicmeter.DecicubicFeet).CubicMeters, DecicubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromDecicubicMeters(cubicmeter.DecicubicMeters).CubicMeters, DecicubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromDeciliters(cubicmeter.Deciliters).CubicMeters, DecilitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromExacubicFeet(cubicmeter.ExacubicFeet).CubicMeters, ExacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromExacubicMeters(cubicmeter.ExacubicMeters).CubicMeters, ExacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromExaliters(cubicmeter.Exaliters).CubicMeters, ExalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromFemtocubicFeet(cubicmeter.FemtocubicFeet).CubicMeters, FemtocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromFemtocubicMeters(cubicmeter.FemtocubicMeters).CubicMeters, FemtocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromFemtoliters(cubicmeter.Femtoliters).CubicMeters, FemtolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromGigacubicFeet(cubicmeter.GigacubicFeet).CubicMeters, GigacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromGigacubicMeters(cubicmeter.GigacubicMeters).CubicMeters, GigacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromGigaliters(cubicmeter.Gigaliters).CubicMeters, GigalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromHectocubicFeet(cubicmeter.HectocubicFeet).CubicMeters, HectocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromHectocubicMeters(cubicmeter.HectocubicMeters).CubicMeters, HectocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromHectoliters(cubicmeter.Hectoliters).CubicMeters, HectolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromImperialBeerBarrels(cubicmeter.ImperialBeerBarrels).CubicMeters, ImperialBeerBarrelsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromImperialGallons(cubicmeter.ImperialGallons).CubicMeters, ImperialGallonsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromImperialOunces(cubicmeter.ImperialOunces).CubicMeters, ImperialOuncesTolerance);
            AssertEx.EqualTolerance(1, Volume.FromImperialPints(cubicmeter.ImperialPints).CubicMeters, ImperialPintsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromKilocubicFeet(cubicmeter.KilocubicFeet).CubicMeters, KilocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromKilocubicMeters(cubicmeter.KilocubicMeters).CubicMeters, KilocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromKiloimperialGallons(cubicmeter.KiloimperialGallons).CubicMeters, KiloimperialGallonsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromKiloliters(cubicmeter.Kiloliters).CubicMeters, KilolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromKilousGallons(cubicmeter.KilousGallons).CubicMeters, KilousGallonsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromLiters(cubicmeter.Liters).CubicMeters, LitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMegacubicFeet(cubicmeter.MegacubicFeet).CubicMeters, MegacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMegacubicMeters(cubicmeter.MegacubicMeters).CubicMeters, MegacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMegaimperialGallons(cubicmeter.MegaimperialGallons).CubicMeters, MegaimperialGallonsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMegaliters(cubicmeter.Megaliters).CubicMeters, MegalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMegausGallons(cubicmeter.MegausGallons).CubicMeters, MegausGallonsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMetricCups(cubicmeter.MetricCups).CubicMeters, MetricCupsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMetricTeaspoons(cubicmeter.MetricTeaspoons).CubicMeters, MetricTeaspoonsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMicrocubicFeet(cubicmeter.MicrocubicFeet).CubicMeters, MicrocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMicrocubicMeters(cubicmeter.MicrocubicMeters).CubicMeters, MicrocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMicroliters(cubicmeter.Microliters).CubicMeters, MicrolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMillicubicFeet(cubicmeter.MillicubicFeet).CubicMeters, MillicubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMillicubicMeters(cubicmeter.MillicubicMeters).CubicMeters, MillicubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromMilliliters(cubicmeter.Milliliters).CubicMeters, MillilitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromNanocubicFeet(cubicmeter.NanocubicFeet).CubicMeters, NanocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromNanocubicMeters(cubicmeter.NanocubicMeters).CubicMeters, NanocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromNanoliters(cubicmeter.Nanoliters).CubicMeters, NanolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromOilBarrels(cubicmeter.OilBarrels).CubicMeters, OilBarrelsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromPetacubicFeet(cubicmeter.PetacubicFeet).CubicMeters, PetacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromPetacubicMeters(cubicmeter.PetacubicMeters).CubicMeters, PetacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromPetaliters(cubicmeter.Petaliters).CubicMeters, PetalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromPicocubicFeet(cubicmeter.PicocubicFeet).CubicMeters, PicocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromPicocubicMeters(cubicmeter.PicocubicMeters).CubicMeters, PicocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromPicoliters(cubicmeter.Picoliters).CubicMeters, PicolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromQutracubicFeet(cubicmeter.QutracubicFeet).CubicMeters, QutracubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromQutracubicMeters(cubicmeter.QutracubicMeters).CubicMeters, QutracubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromQutraliters(cubicmeter.Qutraliters).CubicMeters, QutralitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromTeracubicFeet(cubicmeter.TeracubicFeet).CubicMeters, TeracubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromTeracubicMeters(cubicmeter.TeracubicMeters).CubicMeters, TeracubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromTeraliters(cubicmeter.Teraliters).CubicMeters, TeralitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromUkTablespoons(cubicmeter.UkTablespoons).CubicMeters, UkTablespoonsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromUsBeerBarrels(cubicmeter.UsBeerBarrels).CubicMeters, UsBeerBarrelsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromUsCustomaryCups(cubicmeter.UsCustomaryCups).CubicMeters, UsCustomaryCupsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromUsGallons(cubicmeter.UsGallons).CubicMeters, UsGallonsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromUsLegalCups(cubicmeter.UsLegalCups).CubicMeters, UsLegalCupsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromUsOunces(cubicmeter.UsOunces).CubicMeters, UsOuncesTolerance);
            AssertEx.EqualTolerance(1, Volume.FromUsPints(cubicmeter.UsPints).CubicMeters, UsPintsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromUsQuarts(cubicmeter.UsQuarts).CubicMeters, UsQuartsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromUsTablespoons(cubicmeter.UsTablespoons).CubicMeters, UsTablespoonsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromUsTeaspoons(cubicmeter.UsTeaspoons).CubicMeters, UsTeaspoonsTolerance);
            AssertEx.EqualTolerance(1, Volume.FromVettacubicFeet(cubicmeter.VettacubicFeet).CubicMeters, VettacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromVettacubicMeters(cubicmeter.VettacubicMeters).CubicMeters, VettacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromVettaliters(cubicmeter.Vettaliters).CubicMeters, VettalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromYoctocubicFeet(cubicmeter.YoctocubicFeet).CubicMeters, YoctocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromYoctocubicMeters(cubicmeter.YoctocubicMeters).CubicMeters, YoctocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromYoctoliters(cubicmeter.Yoctoliters).CubicMeters, YoctolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromYottacubicFeet(cubicmeter.YottacubicFeet).CubicMeters, YottacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromYottacubicMeters(cubicmeter.YottacubicMeters).CubicMeters, YottacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromYottaliters(cubicmeter.Yottaliters).CubicMeters, YottalitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromZeptocubicFeet(cubicmeter.ZeptocubicFeet).CubicMeters, ZeptocubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromZeptocubicMeters(cubicmeter.ZeptocubicMeters).CubicMeters, ZeptocubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromZeptoliters(cubicmeter.Zeptoliters).CubicMeters, ZeptolitersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromZettacubicFeet(cubicmeter.ZettacubicFeet).CubicMeters, ZettacubicFeetTolerance);
            AssertEx.EqualTolerance(1, Volume.FromZettacubicMeters(cubicmeter.ZettacubicMeters).CubicMeters, ZettacubicMetersTolerance);
            AssertEx.EqualTolerance(1, Volume.FromZettaliters(cubicmeter.Zettaliters).CubicMeters, ZettalitersTolerance);
        }

        [Fact]
        public void ArithmeticOperators()
        {
            Volume v = Volume.FromCubicMeters(1);
            AssertEx.EqualTolerance(-1, -v.CubicMeters, CubicMetersTolerance);
            AssertEx.EqualTolerance(2, (Volume.FromCubicMeters(3)-v).CubicMeters, CubicMetersTolerance);
            AssertEx.EqualTolerance(2, (v + v).CubicMeters, CubicMetersTolerance);
            AssertEx.EqualTolerance(10, (v*10).CubicMeters, CubicMetersTolerance);
            AssertEx.EqualTolerance(10, (10*v).CubicMeters, CubicMetersTolerance);
            AssertEx.EqualTolerance(2, (Volume.FromCubicMeters(10)/5).CubicMeters, CubicMetersTolerance);
            AssertEx.EqualTolerance(2, Volume.FromCubicMeters(10)/Volume.FromCubicMeters(5), CubicMetersTolerance);
        }

        [Fact]
        public void ComparisonOperators()
        {
            Volume oneCubicMeter = Volume.FromCubicMeters(1);
            Volume twoCubicMeters = Volume.FromCubicMeters(2);

            Assert.True(oneCubicMeter < twoCubicMeters);
            Assert.True(oneCubicMeter <= twoCubicMeters);
            Assert.True(twoCubicMeters > oneCubicMeter);
            Assert.True(twoCubicMeters >= oneCubicMeter);

            Assert.False(oneCubicMeter > twoCubicMeters);
            Assert.False(oneCubicMeter >= twoCubicMeters);
            Assert.False(twoCubicMeters < oneCubicMeter);
            Assert.False(twoCubicMeters <= oneCubicMeter);
        }

        [Fact]
        public void CompareToIsImplemented()
        {
            Volume cubicmeter = Volume.FromCubicMeters(1);
            Assert.Equal(0, cubicmeter.CompareTo(cubicmeter));
            Assert.True(cubicmeter.CompareTo(Volume.Zero) > 0);
            Assert.True(Volume.Zero.CompareTo(cubicmeter) < 0);
        }

        [Fact]
        public void CompareToThrowsOnTypeMismatch()
        {
            Volume cubicmeter = Volume.FromCubicMeters(1);
            Assert.Throws<ArgumentException>(() => cubicmeter.CompareTo(new object()));
        }

        [Fact]
        public void CompareToThrowsOnNull()
        {
            Volume cubicmeter = Volume.FromCubicMeters(1);
            Assert.Throws<ArgumentNullException>(() => cubicmeter.CompareTo(null));
        }

        [Fact]
        public void EqualityOperators()
        {
            var a = Volume.FromCubicMeters(1);
            var b = Volume.FromCubicMeters(2);

 // ReSharper disable EqualExpressionComparison

            Assert.True(a == a);
            Assert.False(a != a);

            Assert.True(a != b);
            Assert.False(a == b);

            Assert.False(a == null);
            Assert.False(null == a);

// ReSharper restore EqualExpressionComparison
        }

        [Fact]
        public void EqualsIsImplemented()
        {
            var a = Volume.FromCubicMeters(1);
            var b = Volume.FromCubicMeters(2);

            Assert.True(a.Equals(a));
            Assert.False(a.Equals(b));
            Assert.False(a.Equals(null));
        }

        [Fact]
        public void EqualsRelativeToleranceIsImplemented()
        {
            var v = Volume.FromCubicMeters(1);
            Assert.True(v.Equals(Volume.FromCubicMeters(1), CubicMetersTolerance, ComparisonType.Relative));
            Assert.False(v.Equals(Volume.Zero, CubicMetersTolerance, ComparisonType.Relative));
        }

        [Fact]
        public void EqualsReturnsFalseOnTypeMismatch()
        {
            Volume cubicmeter = Volume.FromCubicMeters(1);
            Assert.False(cubicmeter.Equals(new object()));
        }

        [Fact]
        public void EqualsReturnsFalseOnNull()
        {
            Volume cubicmeter = Volume.FromCubicMeters(1);
            Assert.False(cubicmeter.Equals(null));
        }

        [Fact]
        public void UnitsDoesNotContainUndefined()
        {
            Assert.DoesNotContain(VolumeUnit.Undefined, Volume.Units);
        }

        [Fact]
        public void HasAtLeastOneAbbreviationSpecified()
        {
            var units = Enum.GetValues(typeof(VolumeUnit)).Cast<VolumeUnit>();
            foreach(var unit in units)
            {
                if(unit == VolumeUnit.Undefined)
                    continue;

                var defaultAbbreviation = UnitAbbreviationsCache.Default.GetDefaultAbbreviation(unit);
            }
        }

        [Fact]
        public void BaseDimensionsShouldNeverBeNull()
        {
            Assert.False(Volume.BaseDimensions is null);
        }
    }
}
